{"version":3,"sources":["images/banner2.jpg","images/Dashboard.png","images/SelectProjectName.png","images/PlanerPage.png","images/Preview.PNG","images/Budget.PNG","clases/Storage.js","context/CurrentProjectContext.jsx","context/AchivedProjectsContext.jsx","components/Header.jsx","components/Nav.jsx","components/projectPageComponents/RoiPanel.jsx","components/projectPageComponents/EquilibriumPanel.jsx","components/projectPageComponents/charts/StackedBar.jsx","components/projectPageComponents/YearlyFlowPanel.jsx","components/projectPageComponents/MonthlyFlowPanel.jsx","components/projectPageComponents/charts/Donut.jsx","components/projectPageComponents/FixedCostPanel.jsx","components/projectPageComponents/charts/MultyCircle.jsx","components/projectPageComponents/AssetsPannel.jsx","components/projectPageComponents/UnitsEquilibriumPanel.jsx","components/projectPageComponents/ActionButtons.jsx","pages/Project.jsx","pages/Dashboard.jsx","components/planerPageComponents/PopUp.jsx","components/planerPageComponents/FormsModal.jsx","components/planerPageComponents/UpdateModal.jsx","clases/ProductClass.js","components/planerPageComponents/Forms/ProductFrom.jsx","components/planerPageComponents/ProductsList.jsx","clases/AssetClass.js","components/planerPageComponents/Forms/AssetForm.jsx","components/planerPageComponents/AssetsLis.jsx","clases/ExpenseClass.js","components/planerPageComponents/Forms/ExpenseForm.jsx","components/planerPageComponents/ExpenseList.jsx","clases/EmployeeClass.js","components/planerPageComponents/Forms/EmployeeForm.jsx","components/planerPageComponents/PayrollList.jsx","clases/ProjectClass.js","components/planerPageComponents/ActionButtons.jsx","components/planerPageComponents/ListsContainer.jsx","pages/Planer.jsx","components/BudgetPageComponents/ActionButtons.jsx","components/BudgetPageComponents/DonutChart.jsx","components/BudgetPageComponents/BudgetCard.jsx","pages/BudgetPage.jsx","pages/About.jsx","pages/Settings.jsx","pages/Instructions.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Storage","CurrentProj","localStorage","setItem","getItem","JSON","parse","project","updateProject","projectName","projects","getProjecs","push","stringify","projName","forEach","index","splice","window","alert","nameOfTheProjectToLoad","projectToLoad","filter","products","expenses","items","payroll","assets","industry","emptyArr","CurrentProjectContext","createContext","CurrentProjectContextProvider","props","useState","currentProjectProducts","setCurrentProjectProducts","currentProjectAssets","setCurrentProjectAssets","currentProjectExpenses","setCurrentProjectExpenses","currentProjectPayroll","setCurrentProjectPayroll","currentProjectIndustry","setCurrentProjectIndustry","currentProjectName","setCurrentProjectName","currentProjecBody","setCurrentProjecBody","updateState","proj","useEffect","Provider","value","resetLocalStorage","newProject","children","AchivedProjectsContext","AchivedProjectsContextProvider","archivedProjects","setArchivedProjects","updateArchived","LoadProject","loadProject","Header","className","to","Nav","useContext","onClick","RoiPanel","roi","roiTime","EquilibriumPanel","equilibrium","eqAmount","toFixed","yearlyEqAmount","StackedBar","sales","fixedExpenses","salesCost","state","series","name","data","totalTax","netIncome","options","chart","type","stacked","plotOptions","bar","horizontal","stroke","width","colors","xaxis","categories","labels","formatter","val","yaxis","title","text","undefined","tooltip","y","fill","opacity","legend","position","horizontalAlign","offsetX","height","YearlyFlowPanel","yearlyFlow","MonthlyFlowPanel","monthlyFlow","Donut","expensesAmount","payrollAmount","FixedCostPanel","monthlyExpense","monthlyPayroll","MultyCircle","map","asset","totalCost","assetsTotalAmount","radialBar","dataLabels","fontSize","total","show","label","w","AssetsPannel","UnitsEquilibriumPanel","unitEquilibrium","product","ProductEqulibriumRow","productObject","key","EquilibriumInUnits","price","Equ","participation","bMPercent","bMargen","cost","ActionButtons","e","confirm","removeProject","preventDefault","Project","toUpperCase","Dashboard","bannerBackgound","backgroundImage","banner","backgroundSize","style","length","ProjectListItem","nameOfTheProject","history","useHistory","handleOpen","a","PopUp","setProjectNameIsDefined","setprojectName","industryName","setIndustryName","id","onSubmit","htmlFor","onChange","target","required","FormsModal","visible","setVisible","Toggle","ContainerStyle","display","top","zIndex","burttonText","CSSTransition","in","timeout","classNames","React","cloneElement","UpdateModal","nodeRef","useRef","buttonstyle","background","color","fontWeight","textAlign","justifyContent","padding","borderRadius","margin","cursor","textShadow","onDoubleClick","row","ref","deleteAction","item","Product","taxPercent","saleProjecton","Math","random","this","parseFloat","taxAmount","pricePlusTax","bruteMargin","bruteMarginPercent","salesPlusTax","totalSalesTax","salesBruteMargin","yearlyUnitsSale","yearlySale","Products","totalProjectionUnits","reduce","b","totalSales","totalSalesCost","prodsMetrics","producto","participacion","ponderateMargin","salePrice","bruteMarginPerc","totalPondarateMargin","ProductFrom","updateProductList","defaultState","setProduct","hadleChange","newValue","prevState","newProduct","placeholder","ProductsList","updateProduct","newProducts","prod","deleteProduct","ProductRow","Asset","quantity","assetType","description","Assets","fixedAssets","liqAssets","fixedAssetsTotalAmount","liqdAssetsTotalAmount","AssetForm","updateAssetList","setAsset","newAsset","AssetsLis","UpdateAsset","newAssets","ast","deleteAsset","AssetRow","Expense","amount","Expenses","yearlyExpense","ExpenseForm","updateExpenseList","expense","setExpense","newExpense","ExpenseList","UpdateExpense","newExpenses","exp","deleteExpense","ExpenseRow","Employee","monthlySalary","jobDescription","contractType","paymentFrecuency","department","JobDescription","yearlySalary","depeartment","Payroll","employees","yearlyPayroll","EmployeeForm","updatePayrollList","employee","setEmployee","newEmployee","PayrollList","updateEmployee","newEmployees","emp","deleteEmployee","EmployeeRow","contingencyPercent","EquilibriumByUnits","Budget","num","budProductionCapital","budFixedExpenses","budPayroll","budAssets","budContingency","totalBudget","threeMonthBudget","sixMonthBudget","oneYearBudget","spectedReturnTimeY","moneyFlow","investment","negativeInvestment","lastRemainer","lastFlow","minInitialInvestment","lastMonths","floor","ind","perc","gast","act","hadleSave","SavedProject","createProject","saveProject","hasLengthZero","array","some","clearProjectForms","ListsContainer","Planer","projectNameIsDefined","DonutChart","budget","marginTop","BudgetCard","header","BudgetPage","About","Settings","Instructions","src","require","alt","App","render","location","TransitionGroup","path","exact","component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,4ECA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,yHCAtBC,E,mHAMUC,GAC3BC,aAAaC,QAAQ,qBAAsBF,K,gDAGZA,GAC/BC,aAAaC,QAAQ,yBAA0BF,K,mCAU/C,OALyC,OAArCC,aAAaE,QAAQ,YACZ,GAEAC,KAAKC,MAAMJ,aAAaE,QAAQ,e,kCAK5BG,GACjBP,EAAQQ,cAAcD,EAAQE,aAC9B,IAAMC,EAAWV,EAAQW,aACzBD,EAASE,KAAKL,GACdL,aAAaC,QAAQ,WAAYE,KAAKQ,UAAUH,M,oCAG7BI,GACnB,IAAMJ,EAAWV,EAAQW,aACzBD,EAASK,SAAQ,SAACR,EAASS,GACrBT,EAAQE,cAAgBK,IAC1BJ,EAASO,OAAOD,EAAO,GACvBd,aAAaC,QAAQ,WAAYE,KAAKQ,UAAUH,U,oCAIjCI,GACnB,IAAMJ,EAAWV,EAAQW,aACzBD,EAASK,SAAQ,SAACR,EAASS,GACrBT,EAAQE,cAAgBK,IAC1BJ,EAASO,OAAOD,EAAO,GACvBd,aAAaC,QAAQ,WAAYE,KAAKQ,UAAUH,IAChDQ,OAAOC,MAAP,sBAA4BZ,EAAQE,YAApC,6B,kCAKaW,GAEjB,IAAMC,EAAgBrB,EAAQW,aAAaW,QACzC,SAACf,GAAD,OAAaA,EAAQE,cAAgBW,KACrC,GAEFlB,aAAaC,QACX,yBACAE,KAAKQ,UAAUQ,EAAcE,SAASA,WAExCrB,aAAaC,QACX,yBACAE,KAAKQ,UAAUQ,EAAcG,SAASC,QAExCvB,aAAaC,QACX,wBACAE,KAAKQ,UAAUQ,EAAcK,QAAQA,UAEvCxB,aAAaC,QACX,uBACAE,KAAKQ,UAAUQ,EAAcM,OAAOF,QAEtCvB,aAAaC,QAAQ,qBAAsBkB,EAAcZ,aACzDP,aAAaC,QAAQ,yBAA0BkB,EAAcO,Y,mCAI7D,IAAIC,EAAW,GACf3B,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUgB,IAC9D3B,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUgB,IAC9D3B,aAAaC,QAAQ,wBAAyBE,KAAKQ,UAAUgB,IAC7D3B,aAAaC,QAAQ,uBAAwBE,KAAKQ,UAAUgB,IAC5D3B,aAAaC,QAAQ,qBAAsB,eAC3CD,aAAaC,QAAQ,yBAA0B,iB,0CAI/C,IAAI0B,EAAW,GACf3B,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUgB,IAC9D3B,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUgB,IAC9D3B,aAAaC,QAAQ,wBAAyBE,KAAKQ,UAAUgB,IAC7D3B,aAAaC,QAAQ,uBAAwBE,KAAKQ,UAAUgB,Q,KA5F3C7B,EACZS,YAAc,WACnB,OAAOP,aAAaE,QAAQ,uBAFXJ,EAIZ4B,SAAW,kBAAM1B,aAAaE,QAAQ,2BCDxC,IAAM0B,EAAwBC,0BAE9B,SAASC,EAA8BC,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBAC5CC,EAD4C,KACpBC,EADoB,OAEKF,mBAAS,IAFd,mBAE5CG,EAF4C,KAEtBC,EAFsB,OAGSJ,mBAAS,IAHlB,mBAG5CK,EAH4C,KAGpBC,EAHoB,OAION,mBAAS,IAJhB,mBAI5CO,EAJ4C,KAIrBC,EAJqB,OAKSR,mBAAS,IALlB,mBAK5CS,EAL4C,KAKpBC,EALoB,OAMCV,mBAAS,IANV,mBAM5CW,EAN4C,KAMxBC,EANwB,OAODZ,mBAAS,IAPR,mBAO5Ca,EAP4C,KAOzBC,EAPyB,KASnD,SAASC,IACPD,EACEhD,EAAQW,aAAaW,QACnB,SAAC4B,GAAD,OACEA,EAAKzC,cAAgBP,aAAaE,QAAQ,yBAC5C,IAEJgC,EACE/B,KAAKC,MAAMJ,aAAaE,QAAQ,4BAElCoC,EACEnC,KAAKC,MAAMJ,aAAaE,QAAQ,4BAGlCsC,EACErC,KAAKC,MAAMJ,aAAaE,QAAQ,2BAElCkC,EACEjC,KAAKC,MAAMJ,aAAaE,QAAQ,0BAGlC0C,EAAsB5C,aAAaE,QAAQ,uBAC3CwC,EAA0B1C,aAAaE,QAAQ,2BAUjD,OAJA+C,qBAAU,WACRF,MACC,IAGD,6BACE,kBAACnB,EAAsBsB,SAAvB,CACEC,MAAO,CACLlB,yBACAC,4BACAC,uBACAC,0BACAC,yBACAC,4BACAC,wBACAC,2BACAC,yBACAC,4BACAC,qBACAC,wBACAG,cACAK,kBAzBR,WACEtD,EAAQuD,cAyBFR,sBAGDd,EAAMuB,WChER,IAAMC,EAAyB1B,0BAE/B,SAAS2B,EAA+BzB,GAAQ,IAAD,EACJC,mBAAS,IADL,mBAC7CyB,EAD6C,KAC3BC,EAD2B,KAGpD,SAASC,IACPD,EAAoB5D,EAAQW,cAU9B,OAJAwC,qBAAU,WACRU,MACC,IAGD,6BACE,kBAACJ,EAAuBL,SAAxB,CACEC,MAAO,CACLM,mBACAC,sBACAC,iBACAC,YAfR,SAAqBrD,GACnBT,EAAQ+D,YAAYtD,MAiBfwB,EAAMuB,W,iBC1BA,SAASQ,IACtB,OACE,4BAAQC,UAAU,UAChB,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKD,UAAU,QACb,yBAAKA,UAAU,aAAf,UACA,wBAAIA,UAAU,aAAd,cAGJ,yBAAKA,UAAU,eACb,mCACA,mCACA,qCCXO,SAASE,IAAO,IAAD,EACeC,qBAAWtC,GAA9CmB,EADoB,EACpBA,YAAaK,EADO,EACPA,kBAKrB,OACE,6BACE,yBAAKW,UAAU,aACb,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,qBACb,0BAAMA,UAAU,YAAhB,eAGJ,wBAAII,QAda,WACvBf,IACAL,MAaQ,kBAAC,IAAD,CAAMiB,GAAG,WACP,uBAAGD,UAAU,4BACb,0BAAMA,UAAU,YAAhB,iBAIJ,4BACE,kBAAC,IAAD,CAAMC,GAAG,iBACP,uBAAGD,UAAU,qBACb,0BAAMA,UAAU,YAAhB,kBAGJ,4BACE,kBAAC,IAAD,CAAMC,GAAG,UACP,uBAAGD,UAAU,qBACb,0BAAMA,UAAU,YAAhB,YAmBN,wBAAIA,UAAU,UACZ,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAG,aACP,uBAAGD,UAAU,qBACb,0BAAMA,UAAU,YAAhB,0BCxDC,SAASK,IAAY,IAC1BvB,EAAsBqB,qBAAWtC,GAAjCiB,kBACAwB,EAAQxB,EAARwB,IAER,OACE,yBAAKN,UAAU,oBACb,wCACA,6BACCM,GAAO,2BAAIxB,EAAkBwB,IAAIC,UCRzB,SAASC,IAAoB,IAGlCC,EAFsBN,qBAAWtC,GAAjCiB,kBAEA2B,YACR,OACE,yBAAKT,UAAU,4BACb,0CACA,6BACCS,GAAe,wCAAcA,EAAYC,SAASC,QAAQ,IAC1DF,GAAe,uCAAaA,EAAYG,eAAeD,QAAQ,K,qBCTvD,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,UAIMC,EAAQ,CACZC,OAAQ,CACN,CACEC,KAAM,QACNC,KAAM,CAACN,EAAO,IAEhB,CACEK,KAAM,QACNC,KAAM,CAAC,EATZ,EAFDC,WAaI,CACEF,KAAM,aACNC,KAAM,CAAC,EAAGL,IAEZ,CACEI,KAAM,aACNC,KAAM,CAAC,EAAGJ,IAEZ,CACEG,KAAM,aACNC,KAAM,CAAC,EAAG,EArBf,EADDE,aAyBEC,QAAS,CACPC,MAAO,CACLC,KAAM,MACNC,SAAS,GAEXC,YAAa,CACXC,IAAK,CACHC,YAAY,IAGhBC,OAAQ,CACNC,MAAO,EACPC,OAAQ,CAAC,SAGXC,MAAO,CACLC,WAAY,CAAC,SAAU,UAAW,cAClCC,OAAQ,CACNC,UAAW,SAAUC,GACnB,OAAO,QAIbC,MAAO,CACLC,MAAO,CACLC,UAAMC,IAGVC,QAAS,CACPC,EAAG,CACDP,UAAW,SAAUC,GACnB,MAAO,MAAQA,KAIrBO,KAAM,CACJC,QAAS,GAEXC,OAAQ,CACNC,SAAU,MACVC,gBAAiB,OACjBC,QAAS,MAKf,OACE,6BACE,kBAAC,IAAD,CACE1B,QAASN,EAAMM,QACfL,OAAQD,EAAMC,OACdO,KAAK,MACLM,MAAM,MACNmB,OAAO,SClFA,SAASC,IAAmB,IAEjCC,EADsBjD,qBAAWtC,GAAjCiB,kBACAsE,WAER,OACE,yBAAKpD,UAAU,2BACb,2CACCoD,GACC,kBAACvC,EAAD,CACEC,MAAOsC,EAAWtC,MAAMH,QAAQ,GAChCI,cAAeqC,EAAWrC,cAAcJ,QAAQ,GAChDK,UAAWoC,EAAWpC,UAAUL,QAAQ,GACxCU,SAAU+B,EAAW/B,SAASV,QAAQ,GACtCW,UAAW8B,EAAW9B,UAAUX,QAAQ,MCbnC,SAAS0C,IAAoB,IAElCC,EADsBnD,qBAAWtC,GAAjCiB,kBACAwE,YAER,OACE,yBAAKtD,UAAU,4BACb,4CACCsD,GACC,kBAACzC,EAAD,CACEC,MAAOwC,EAAYxC,MAAMH,QAAQ,GACjCI,cAAeuC,EAAYvC,cAAcJ,QAAQ,GACjDK,UAAWsC,EAAYtC,UAAUL,QAAQ,GACzCU,SAAUiC,EAAYjC,SAASV,QAAQ,GACvCW,UAAWgC,EAAYhC,UAAUX,QAAQ,MCbpC,SAAS4C,EAAT,GAAmD,IAAlCC,EAAiC,EAAjCA,eACxBvC,EAAQ,CACZM,QAAS,CACPY,OAAQ,CAAC,UAAW,kBACpBW,OAAQ,CACNC,SAAU,QAGd7B,OAAQ,CARqD,EAAjBuC,cAQpBD,IAG1B,OACE,6BACE,kBAAC,IAAD,CACEjC,QAASN,EAAMM,QACfL,OAAQD,EAAMC,OACdO,KAAK,QACLM,MAAM,SChBC,SAAS2B,IAAkB,IAChC5E,EAAsBqB,qBAAWtC,GAAjCiB,kBACAvB,EAAsBuB,EAAtBvB,SAAUE,EAAYqB,EAAZrB,QAClB,OACE,yBAAKuC,UAAU,0BACb,kDACCzC,GACC,kBAACgG,EAAD,CACEC,eAAgBjG,EAASoG,eACzBF,cAAehG,EAAQmG,iBAG1BrG,GACC,sCAAYA,EAASoG,eAAiBlG,EAAQmG,eAA9C,MCfO,SAASC,EAAT,GAAkC,IAAXnG,EAAU,EAAVA,OAQ9BuD,EAAQ,CACZC,OARgBxD,EAAOF,MAAMsG,KAAI,SAACC,GAAD,OAC/BA,EAAMC,UAAYtG,EAAOuG,kBAAqB,KAAKtD,QAAQ,MAQ7DY,QAAS,CACPC,MAAO,CACL0B,OAAQ,IACRzB,KAAM,aAERE,YAAa,CACXuC,UAAW,CACTC,WAAY,CACVhD,KAAM,CACJiD,SAAU,QAEZhF,MAAO,CACLgF,SAAU,QAEZC,MAAO,CACLC,MAAM,EACNC,MAAO,QACPnC,UAAW,SAAUoC,GAEnB,MAAO,IAAM9G,EAAOuG,uBAM9B9B,OA/BczE,EAAOF,MAAMsG,KAC7B,SAACC,GAAD,gBAAcA,EAAM5C,KAApB,cAA8B4C,EAAMC,UAAUrD,QAAQ,SAkCxD,OACE,6BACE,kBAAC,IAAD,CACEY,QAASN,EAAMM,QACfL,OAAQD,EAAMC,OACdO,KAAK,YACLyB,OAAQ,OC7CD,SAASuB,IAAgB,IAG9B/G,EAFsByC,qBAAWtC,GAAjCiB,kBAEApB,OACR,OACE,yBAAKsC,UAAU,uBACb,sCACCtC,GAAU,kBAACmG,EAAD,CAAanG,OAAQA,KCPvB,SAASgH,IAAyB,IAGvCjE,EAFsBN,qBAAWtC,GAAjCiB,kBAEA2B,YAER,OACE,yBAAKT,UAAU,iCACb,8DACA,6BACA,+BACE,+BACE,4BACE,uCACA,oCACA,qCACA,4CACA,wCACA,6CACA,wCACA,0CAGJ,+BACGS,GACCA,EAAYkE,gBAAgBb,KAAI,SAACc,GAAD,OAC9B,kBAACC,EAAD,CACEC,cAAeF,EACfG,IAAKH,EAAQA,eAKvB,6BACCnE,GACC,oDAA0BA,EAAYuE,mBAAmBrE,QAAQ,KAMzE,SAASkE,EAAT,GAAkD,IAAlBC,EAAiB,EAAjBA,cAE5BF,EAQEE,EARFF,QACAK,EAOEH,EAPFG,MACAC,EAMEJ,EANFI,IACAxE,EAKEoE,EALFpE,SACAyE,EAIEL,EAJFK,cACAC,EAGEN,EAHFM,UACAC,EAEEP,EAFFO,QACAC,EACER,EADFQ,KAEF,OACE,4BACE,4BAAKV,GACL,gCAAMU,EAAK3E,QAAQ,IACnB,gCAAMsE,EAAMtE,QAAQ,IACpB,gCAAM0E,EAAQ1E,QAAQ,IACtB,4BAAKyE,EAAUzE,QAAQ,GAAvB,KACA,4BAAKwE,EAAcxE,QAAQ,GAA3B,KACA,gCAAMuE,EAAIvE,QAAQ,IAClB,gCAAMD,EAASC,QAAQ,KC1Dd,SAAS4E,IAAiB,IAC/B3G,EAAuBuB,qBAAWtC,GAAlCe,mBAUR,OACE,6BAASoB,UAAU,kBACjB,kBAAC,IAAD,CAAMC,GAAG,WACP,uBAAGsC,MAAM,eAAevC,UAAU,kBAEpC,kBAAC,IAAD,CAAMC,GAAG,WACP,uBAAGsC,MAAM,eAAevC,UAAU,gBAEpC,kBAAC,IAAD,CAAMC,GAAG,KACP,uBACEG,QAlBa,SAACoF,GAChBvI,OAAOwI,QAAQ,sDACjB1J,EAAQ2J,cAAc9G,GACtB3B,OAAOC,MAAP,sBAA4B0B,EAA5B,kBAEA4G,EAAEG,kBAcEpD,MAAM,iBACNvC,UAAU,oBCjBL,SAAS4F,IAAW,IAAD,EACYzF,qBAAWtC,GAA/CmB,EADwB,EACxBA,YAAaJ,EADW,EACXA,mBAMrB,OAJAM,qBAAU,WACRF,MAEC,IAED,yBAAKgB,UAAU,QACb,wBAAIA,UAAU,eACXpB,EAAmBiH,cADtB,sBAEE,kBAACN,EAAD,OAGF,yBAAKvF,UAAU,iBACb,yBAAKA,UAAU,WACb,kBAACK,EAAD,MACA,kBAACG,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAACkD,EAAD,MACA,kBAACe,EAAD,MACA,kBAACC,EAAD,Q,8CC5BO,SAASoB,IAAa,IAAD,EACS3F,qBAAWtC,GAA9CmB,EAD0B,EAC1BA,YAAaK,EADa,EACbA,kBADa,EAEWc,qBAC3CX,GADME,EAF0B,EAE1BA,iBAAkBE,EAFQ,EAERA,eAIpBmG,EAAkB,CACtBC,gBAAgB,OAAD,OAASC,IAAT,KACfC,eAAgB,SAUlB,OAPAhH,qBAAU,WACRG,IACAL,IACAY,MAEC,IAGD,yBAAKI,UAAU,QACb,wBAAIA,UAAU,eAAd,aACA,yBAAKA,UAAU,YAAYmG,MAAOJ,GAC/BrG,EAAiB0G,QAChB,yBAAKpG,UAAU,eACb,2CACA,6BACCN,EAAiBoE,KAAI,SAACxH,GAAD,OACpB,kBAAC+J,EAAD,CACEtB,IAAKzI,EAAQE,YACb8J,iBAAkBhK,EAAQE,oBAU1C,SAAS6J,EAAT,GAAgD,IAArBC,EAAoB,EAApBA,iBACjBzG,EAAgBM,qBAAWX,GAA3BK,YACAb,EAAgBmB,qBAAWtC,GAA3BmB,YACFuH,EAAUC,cAEVC,EAAU,uCAAG,sBAAAC,EAAA,sEACX7G,EAAYyG,GADD,uBAEXtH,IAFW,OAGjBuH,EAAQ5J,KAAR,YAHiB,2CAAH,qDAKhB,OACE,yBAAKyD,QAASqG,EAAYzG,UAAU,mBACjCsG,GCtDQ,SAASK,EAAT,GAA6C,IAA5BC,EAA2B,EAA3BA,wBAA2B,EACIzG,qBAC3DtC,GADMgB,EADiD,EACjDA,sBAAuBF,EAD0B,EAC1BA,0BAD0B,EAInBV,mBAAS,IAJU,mBAIlDzB,EAJkD,KAIrCqK,EAJqC,OAKjB5I,mBAAS,IALQ,mBAKlD6I,EALkD,KAKpCC,EALoC,KAwBzD,OACE,yBAAKC,GAAI,eACP,mDAEA,0BAAMhH,UAAW,OAAQiH,SAbP,SAACzB,GACrBA,EAAEG,iBACF1J,aAAaC,QAAQ,qBAAsBM,GAC3CP,aAAaC,QAAQ,yBAA0B4K,GAC/CjI,EAAsBrC,GACtBmC,EAA0BmI,GAC1BF,GAAwB,KAQpB,2BAAOM,QAAQ,gBAAf,gBACA,2BAAOzF,KAAK,OAAO0F,SAvBC,SAAC3B,GACzBqB,EAAerB,EAAE4B,OAAOhI,QAsB4BiI,UAAQ,IACxD,2BAAOH,QAAQ,oBAAf,YACA,2BAAOzF,KAAK,OAAO0F,SArBE,SAAC3B,GAC1BuB,EAAgBvB,EAAE4B,OAAOhI,QAoB4BiI,UAAQ,IACzD,0CCjCO,SAASC,EAAWtJ,GAAQ,IAAD,EACVC,oBAAS,GADC,mBACjCsJ,EADiC,KACxBC,EADwB,KAGlCC,EAAS,kBAAMD,GAAYD,IAE3BG,EAAiBH,EACnB,CACEI,QAAS,QACTzE,OAAQ,cACRnB,MAAO,MACPgB,SAAU,WACV6E,IAAK,OACLC,OAAQ,KAEV,CAAEF,QAAS,QAETG,EAAcP,EAAU,SAAW,SAEzC,OACE,6BACE,4BAAQnH,QAASqH,GAASK,GAE1B,kBAACC,EAAA,EAAD,CAAeC,GAAIT,EAASU,QAAS,IAAMC,WAAW,SACpD,yBAAK/B,MAAOuB,GACT,IACAS,IAAMC,aAAapK,EAAMuB,SAAU,CAAEkI,OAAQA,IAAW,O,WCzBpD,SAASY,EAAYrK,GAAQ,IAAD,EACXC,oBAAS,GADE,mBAClCsJ,EADkC,KACzBC,EADyB,KAEnCc,EAAUC,iBAAO,MAEjBd,EAAS,kBAAMD,GAAYD,IAM3BG,EAAiBH,EACnB,CACEI,QAAS,QACTzE,OAAQ,cACRnB,MAAO,MACPgB,SAAU,WACV6E,IAAK,OACLC,OAAQ,KAEV,CAAEF,QAAS,QAETa,EAAc,CAClBC,WAAY,MACZC,MAAO,QACP3G,MAAO,OACP4G,WAAY,MACZC,UAAW,SACXC,eAAgB,SAChBC,QAAS,SACTC,aAAc,MACdC,OAAQ,SACRC,OAAQ,UACRC,WAAY,kCAGd,OACE,oCACE,wBAAIC,cAAe1B,IACfF,GAAWvJ,EAAMoL,IACnB,kBAACrB,EAAA,EAAD,CACEC,GAAIT,EACJe,QAASA,EACTL,QAAS,IACTC,WAAW,SAEX,wBAAImB,IAAKf,EAASnC,MAAOuB,GACvB,6BACGS,IAAMC,aAAapK,EAAMuB,SAAU,CAAEkI,OAAQA,IAC9C,yBAAKtB,MAAO,CAAEwB,QAAS,SACrB,4BACExB,MAAK,2BAAOqC,GAAP,IAAoBC,WAAY,SACrCrI,QAASqH,GAER,UAEH,4BAAQtB,MAAOqC,EAAapI,QAjDtB,WAClBpC,EAAMsL,aAAatL,EAAMuL,QAiDV,gB,YC3DNC,EACX,WACErI,EACAmE,EACAL,GAIC,IAHDwE,EAGA,uDAHa,GACbC,EAEA,uCADA1C,EACA,uDADK2C,KAAKC,OAAO,KACjB,oBAEAC,KAAK1I,KAAOA,EACZ0I,KAAKvE,KAAOwE,WAAWxE,GACvBuE,KAAK5E,MAAQ6E,WAAW7E,GACxB4E,KAAKJ,WAAaK,WAAWL,GAC7BI,KAAKE,UAAYF,KAAK5E,OAASwE,EAAa,KAC5CI,KAAKG,aAAeH,KAAK5E,MAAQ4E,KAAKE,UACtCF,KAAKI,YAAcJ,KAAKG,aAAeH,KAAKvE,KAAOuE,KAAKE,UACxDF,KAAKK,mBAAsBL,KAAKI,YAAcJ,KAAKG,aAAgB,IACnEH,KAAK7C,GAAKA,EAEV6C,KAAKH,cAAgBI,WAAWJ,GAChCG,KAAK/I,MAAQ+I,KAAK5E,MAAQ4E,KAAKH,cAC/BG,KAAKM,aAAeN,KAAKG,aAAeH,KAAKH,cAC7CG,KAAK7I,UAAY6I,KAAKvE,KAAOuE,KAAKH,cAClCG,KAAKO,cAAgBP,KAAKE,UAAYF,KAAKH,cAC3CG,KAAKQ,iBAAmBR,KAAKM,aAAeN,KAAK7I,UAEjD6I,KAAKS,gBAAuC,GAArBT,KAAKH,cAC5BG,KAAKU,WAAiC,GAApBV,KAAKM,cAIdK,EACX,aAA0B,IAAD,sDAAVlN,EAAU,yBAAVA,EAAU,gBACvBuM,KAAKvM,SAAWA,EAChBuM,KAAKY,qBAAuBZ,KAAKvM,SAASoN,QACxC,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAEjB,gBAChB,GAEFG,KAAKe,WAAaf,KAAKvM,SAASoN,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAER,eAAc,GACrEN,KAAKgB,eAAiBhB,KAAKvM,SAASoN,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAE3J,YAAW,GACtE6I,KAAKxI,SAAWwI,KAAKvM,SAASoN,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAEP,gBAAe,GACpEP,KAAKiB,aAAejB,KAAKvM,SAASwG,KAAI,SAACc,GACrC,MAAO,CACLmG,SAAUnG,EAAQzD,KAClB6J,cACGpG,EAAQ8E,cAAgB,EAAKe,qBAAwB,IACxDQ,gBACGrG,EAAQ8E,cAAgB,EAAKe,qBAC9B7F,EAAQqF,YACViB,UAAWtG,EAAQoF,aACnBmB,gBAAiBvG,EAAQsF,mBACzBD,YAAarF,EAAQqF,YACrB3E,KAAMV,EAAQU,SAGlBuE,KAAKuB,qBAAuBvB,KAAKiB,aAAaJ,QAC5C,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAEM,kBAChB,ICvDS,SAASI,EAAT,GAIX,IAHFC,EAGC,EAHDA,kBACA7D,EAEC,EAFDA,OACA8D,EACC,EADDA,aACC,EAC6BtN,mBAASsN,GADtC,mBACM3G,EADN,KACe4G,EADf,KAGKC,EAAc,SAACjG,GACnB,IAAMkG,EAAQ,eAAMlG,EAAE4B,OAAOjG,KAAOqE,EAAE4B,OAAOhI,OAC7CoM,GAAW,SAACG,GAAD,mBAAC,eAAoBA,GAAcD,OAsBhD,OACE,6BACE,0BAAMzE,SArBqB,SAACzB,GAC9BA,EAAEG,iBACF,IAAIiG,EAAa,IAAIpC,EACnB5E,EAAQzD,KACRyD,EAAQU,KACRV,EAAQK,MACRL,EAAQ6E,WACR7E,EAAQ8E,cACR9E,EAAQoC,IAEVsE,EAAkBM,GAEdhH,EAAQoC,KACVuE,EAAeK,GAGjBJ,EAAWD,GACX9D,MAKI,yBAAKzH,UAAU,aACb,2BAAOkH,QAAQ,QAAf,WACA,2BACE9H,MAAOwF,EAAQzD,KACfgG,SAAUsE,EACVhK,KAAK,OACLN,KAAK,OACL0K,YAAY,eACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,QAAf,QACA,2BACEzF,KAAK,SACLN,KAAK,OACLgG,SAAUsE,EACVrM,MAAOwF,EAAQU,KACfuG,YAAY,YACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,SAAf,SACA,2BACEC,SAAUsE,EACVhK,KAAK,SACLN,KAAK,QACL/B,MAAOwF,EAAQK,MACf4G,YAAY,aACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,iBAAf,cACA,2BACE9H,MAAOwF,EAAQ8E,cACfvC,SAAUsE,EACVhK,KAAK,SACLN,KAAK,gBACL0K,YAAY,wBACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,cAAf,QACA,2BACE9H,MAAOwF,EAAQ6E,WACftC,SAAUsE,EACVhK,KAAK,SACLN,KAAK,aACL0K,YAAY,cACZxE,UAAQ,KAGZ,yBAAKrH,UAAU,aACb,2CC3FK,SAAS8L,IAAgB,IAAD,EACyB3L,qBAC5DtC,GADMK,EAD6B,EAC7BA,uBAAwBC,EADK,EACLA,0BAe1B4N,EAAgB,SAACnH,GACrB,IAAIoH,EAAc5P,KAAKC,MACrBJ,aAAaE,QAAQ,4BAEvB6P,EAAcA,EAAY3O,QAAO,SAAC4O,GAAD,OAAUA,EAAKjF,KAAOpC,EAAQoC,OACnDrK,KAAKiI,GACjB3I,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUoP,IAC9D7N,EACE/B,KAAKC,MAAMJ,aAAaE,QAAQ,6BAG9B+P,EAAgB,SAACtH,GACrB,GAAI3H,OAAOwI,QAAQ,mDAAiD,CAClE,IAAIuG,EAAc5P,KAAKC,MACrBJ,aAAaE,QAAQ,2BAEvB6P,EAAcA,EAAY3O,QAAO,SAAC4O,GAAD,OAAUA,EAAKjF,KAAOpC,EAAQoC,MAC/D/K,aAAaC,QACX,yBACAE,KAAKQ,UAAUoP,IAEjB7N,EACE/B,KAAKC,MAAMJ,aAAaE,QAAQ,4BAElCc,OAAOC,MAAM,kBAUjB,OANAgC,qBAAU,WACRf,EACE/B,KAAKC,MAAMJ,aAAaE,QAAQ,8BAGjC,IAED,yBAAK6D,UAAW,YACd,6BACA,kBAACsH,EAAD,KACE,kBAAC+D,EAAD,CACEC,kBAlDW,SAAC1G,GAClB,IAAIoH,EAAc5P,KAAKC,MACrBJ,aAAaE,QAAQ,2BAEvB6P,EAAYrP,KAAKiI,GACjB3I,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUoP,IAC9D7N,EACE/B,KAAKC,MAAMJ,aAAaE,QAAQ,6BA4C5BoP,aAAc,CACZpK,KAAM,GACNmE,KAAM,GACNL,MAAO,GACPwE,WAAY,GACZC,cAAe,OAIrB,6BACA,wCACA,6BACA,+BACE,+BACE,4BACE,uCACA,2CACA,2CAGJ,+BACGxL,EAAuB4F,KAAI,SAACc,GAAD,OAC1B,kBAACyD,EAAD,CACEkB,KAAM3E,EACNG,IAAKH,EAAQoC,GACbsC,aAAc4C,EACd9C,IAAK,kBAAC+C,EAAD,CAAYvH,QAASA,KAE1B,kBAACyG,EAAD,CACEC,kBAAmBS,EACnBR,aAAc3G,WAU9B,SAASuH,EAAT,GAAkC,IAAZvH,EAAW,EAAXA,QACpB,OACE,oCACE,4BAAKA,EAAQzD,MACb,iCAAOyD,EAAQoF,cACf,iCAAOpF,EAAQqF,YAAYtJ,QAAQ,KC3GlC,IAAMyL,EACX,WACEjL,EACAmE,EACA+G,GAIC,IAHDrF,EAGA,uDAHK2C,KAAKC,OAAO,KACjB0C,EAEA,uDAFY,QACZC,EACA,uDADc,IACd,oBACA1C,KAAK1I,KAAOA,EACZ0I,KAAKwC,SAAWvC,WAAWuC,GAC3BxC,KAAKvE,KAAOA,EACZuE,KAAK7F,UAAY8F,WAAWxE,GAAQuE,KAAKwC,SACzCxC,KAAKyC,UAAYA,EACjBzC,KAAK0C,YAAcA,EACnB1C,KAAK7C,GAAKA,GAGDwF,GACX,aAAwB,+CAAT9O,EAAQ,yBAARA,EAAQ,gBACrBmM,KAAKrM,MAAQE,EACbmM,KAAK4C,YAAc5C,KAAKrM,MAAMH,QAC5B,SAAC0G,GAAD,MAA+B,UAApBA,EAAMuI,aAEnBzC,KAAK6C,UAAY7C,KAAKrM,MAAMH,QAAO,SAAC0G,GAAD,MAA+B,WAApBA,EAAMuI,aACpDzC,KAAK8C,uBAAyB9C,KAAK4C,YAAY/B,QAC7C,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAE3G,YAChB,GAEF6F,KAAK+C,sBAAwB/C,KAAK6C,UAAUhC,QAC1C,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAE3G,YAChB,GAEF6F,KAAK5F,kBAAoB4F,KAAKrM,MAAMkN,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAE3G,YAAW,IC9B3D,SAAS6I,GAAT,GAA+D,IAA1CC,EAAyC,EAAzCA,gBAAiBrF,EAAwB,EAAxBA,OAAQ8D,EAAgB,EAAhBA,aAAgB,EACjDtN,mBAASsN,GADwC,mBACpExH,EADoE,KAC7DgJ,EAD6D,KAGrEtB,EAAc,SAACjG,GACnB,IAAMkG,EAAQ,eAAMlG,EAAE4B,OAAOjG,KAAOqE,EAAE4B,OAAOhI,OAC7C2N,GAAS,SAACpB,GAAD,mBAAC,eAAoBA,GAAcD,OAc9C,OACE,6BACE,0BAAMzE,SAbmB,SAACzB,GAC5BA,EAAEG,iBACF,IAAIqH,EAAW,IAAIZ,EAAMrI,EAAM5C,KAAM4C,EAAMuB,KAAMvB,EAAMsI,SAAUtI,EAAMiD,IACvE8F,EAAgBE,GAEZjJ,EAAMiD,KACRuE,EAAeyB,GAEjBD,EAASxB,GACT9D,MAKI,yBAAKzH,UAAU,aACb,2BAAOkH,QAAQ,QAAf,SACA,2BACE9H,MAAO2E,EAAM5C,KACbgG,SAAUsE,EACVhK,KAAK,OACLN,KAAK,OACL0K,YAAY,aACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,YAAf,YACA,2BACE9H,MAAO2E,EAAMsI,SACblF,SAAUsE,EACVhK,KAAK,SACLoK,YAAY,kBACZ1K,KAAK,WACLkG,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,QAAf,mBACA,2BACE9H,MAAO2E,EAAMuB,KACb6B,SAAUsE,EACVhK,KAAK,SACLN,KAAK,OACL0K,YAAY,aACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2CCxDK,SAASiN,KAAa,IAAD,EACwB9M,qBACxDtC,GADMO,EAD0B,EAC1BA,qBAAsBC,EADI,EACJA,wBAYxB6O,EAAc,SAACnJ,GACnB,IAAIoJ,EAAY/Q,KAAKC,MAAMJ,aAAaE,QAAQ,0BAChDgR,EAAYA,EAAU9P,QAAO,SAAC+P,GAAD,OAASA,EAAIpG,KAAOjD,EAAMiD,OAC7CrK,KAAKoH,GACf9H,aAAaC,QAAQ,uBAAwBE,KAAKQ,UAAUuQ,IAC5D9O,EACEjC,KAAKC,MAAMJ,aAAaE,QAAQ,2BAI9BkR,EAAc,SAACtJ,GACnB,GAAI9G,OAAOwI,QAAQ,mDAAiD,CAClE,IAAI0H,EAAY/Q,KAAKC,MAAMJ,aAAaE,QAAQ,yBAChDgR,EAAYA,EAAU9P,QAAO,SAAC+P,GAAD,OAASA,EAAIpG,KAAOjD,EAAMiD,MACvD/K,aAAaC,QAAQ,uBAAwBE,KAAKQ,UAAUuQ,IAC5D9O,EACEjC,KAAKC,MAAMJ,aAAaE,QAAQ,0BAElCc,OAAOC,MAAM,kBAWjB,OAPAgC,qBAAU,WACRb,EACEjC,KAAKC,MAAMJ,aAAaE,QAAQ,4BAGjC,IAGD,yBAAK6D,UAAW,YACd,6BAEA,kBAACsH,EAAD,KACE,kBAACuF,GAAD,CACEC,gBA3CS,SAAC/I,GAChB,IAAIoJ,EAAY/Q,KAAKC,MAAMJ,aAAaE,QAAQ,yBAChDgR,EAAUxQ,KAAKoH,GACf9H,aAAaC,QAAQ,uBAAwBE,KAAKQ,UAAUuQ,IAC5D9O,EACEjC,KAAKC,MAAMJ,aAAaE,QAAQ,2BAuC5BoP,aAAc,CAAEpK,KAAM,GAAImE,KAAM,GAAI+G,SAAU,OAIlD,6BACA,sCACA,6BACA,+BACE,+BACE,4BACE,qCACA,wCACA,4CAGJ,+BACGjO,EAAqB0F,KAAI,SAACC,GAAD,OACxB,kBAACsE,EAAD,CACEkB,KAAMxF,EACNgB,IAAKhB,EAAMiD,GACXsC,aAAc+D,EACdjE,IAAK,kBAACkE,GAAD,CAAUvJ,MAAOA,KAEtB,kBAAC8I,GAAD,CAAWC,gBAAiBI,EAAa3B,aAAcxH,WAQrE,SAASuJ,GAAT,GAA8B,IAAVvJ,EAAS,EAATA,MAClB,OACE,oCACE,4BAAKA,EAAM5C,MACX,4BAAK4C,EAAMsI,SAAX,MACA,gCAAMtI,EAAMC,UAAUrD,QAAQ,KC3F7B,IAAM4M,GACX,WAAYpM,EAAMqM,GAAmD,IAA3C/L,EAA0C,uDAAnC,UAAWuF,EAAwB,uDAAnB2C,KAAKC,OAAO,KAAO,oBAClEC,KAAK1I,KAAOA,EACZ0I,KAAKpI,KAAOA,EACZoI,KAAK2D,OAAS1D,WAAW0D,GACzB3D,KAAK7C,GAAKA,GAIDyG,GACX,aAA0B,+CAAXlQ,EAAU,yBAAVA,EAAU,gBACvBsM,KAAKrM,MAAQD,EACbsM,KAAKlG,eAAiBkG,KAAKrM,MAAMkN,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAE6C,SAAQ,GAChE3D,KAAK6D,cAAsC,GAAtB7D,KAAKlG,gBCVf,SAASgK,GAAT,GAIX,IAHFC,EAGC,EAHDA,kBACAnG,EAEC,EAFDA,OACA8D,EACC,EADDA,aACC,EAC6BtN,mBAASsN,GADtC,mBACMsC,EADN,KACeC,EADf,KAEKrC,EAAc,SAACjG,GACnB,IAAMkG,EAAQ,eAAMlG,EAAE4B,OAAOjG,KAAOqE,EAAE4B,OAAOhI,OAC7C0O,GAAW,SAACnC,GAAD,mBAAC,eAAoBA,GAAcD,OAkBhD,OACE,6BACE,0BAAMzE,SAlBqB,SAACzB,GAC9BA,EAAEG,iBACF,IAAIoI,EAAa,IAAIR,GACnBM,EAAQ1M,KACR0M,EAAQL,OACRK,EAAQpM,KACRoM,EAAQ7G,IAEV4G,EAAkBG,GAEdF,EAAQ7G,KACVuE,EAAewC,GAEjBD,EAAWvC,GACX9D,MAKI,yBAAKzH,UAAU,aACb,2BAAOkH,QAAQ,QAAf,WACA,2BACE9H,MAAOyO,EAAQ1M,KACfgG,SAAUsE,EACVhK,KAAK,OACLN,KAAK,OACL0K,YAAY,eACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,UAAf,UACA,2BACE9H,MAAOyO,EAAQL,OACfrG,SAAUsE,EACVhK,KAAK,SACLN,KAAK,SACL0K,YAAY,iBACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,QAAf,gBACA,4BACE/F,KAAK,OACLgG,SAAUsE,EACVrM,MAAOyO,EAAQpM,KACf4F,UAAQ,GAER,4BAAQjI,MAAM,SAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,aAAd,yBACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,aAAd,eAGJ,6BACA,yBAAKY,UAAU,aACb,2CCpEK,SAASgO,KAAe,IAAD,EAC0B7N,qBAC5DtC,GADMS,EAD4B,EAC5BA,uBAAwBC,EADI,EACJA,0BAe1B0P,EAAgB,SAACJ,GACrB,IAAIK,EAAc9R,KAAKC,MACrBJ,aAAaE,QAAQ,4BAEvB+R,EAAcA,EAAY7Q,QAAO,SAAC8Q,GAAD,OAASA,EAAInH,KAAO6G,EAAQ7G,OACjDrK,KAAKkR,GACjB5R,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUsR,IAC9D3P,EACEnC,KAAKC,MAAMJ,aAAaE,QAAQ,6BAI9BiS,EAAgB,SAACP,GACrB,GAAI5Q,OAAOwI,QAAQ,mDAAiD,CAClE,IAAIyI,EAAc9R,KAAKC,MACrBJ,aAAaE,QAAQ,2BAEvB+R,EAAcA,EAAY7Q,QAAO,SAAC8Q,GAAD,OAASA,EAAInH,KAAO6G,EAAQ7G,MAC7D/K,aAAaC,QACX,yBACAE,KAAKQ,UAAUsR,IAEjB3P,EACEnC,KAAKC,MAAMJ,aAAaE,QAAQ,4BAElCc,OAAOC,MAAM,kBAWjB,OAPAgC,qBAAU,WACRX,EACEnC,KAAKC,MAAMJ,aAAaE,QAAQ,8BAGjC,IAGD,yBAAK6D,UAAW,YACd,6BAEA,kBAACsH,EAAD,KACE,kBAACqG,GAAD,CACEC,kBArDW,SAACC,GAClB,IAAIK,EAAc9R,KAAKC,MACrBJ,aAAaE,QAAQ,2BAEvB+R,EAAYvR,KAAKkR,GACjB5R,aAAaC,QAAQ,yBAA0BE,KAAKQ,UAAUsR,IAC9D3P,EACEnC,KAAKC,MAAMJ,aAAaE,QAAQ,6BA+C5BoP,aAAc,CACZpK,KAAM,GACNqM,OAAQ,GACR/L,KAAM,YAIZ,6BACA,wCACA,6BACA,+BACE,+BACE,4BACE,uCACA,sCACA,sCAGJ,+BACGnD,EAAuBwF,KAAI,SAAC+J,GAAD,OAC1B,kBAACxF,EAAD,CACEkB,KAAMsE,EACN9I,IAAK8I,EAAQ7G,GACbsC,aAAc8E,EACdhF,IAAK,kBAACiF,GAAD,CAAYR,QAASA,KAE1B,kBAACF,GAAD,CACEC,kBAAmBK,EACnB1C,aAAcsC,WAU9B,SAASQ,GAAT,GAAkC,IAAZR,EAAW,EAAXA,QACpB,OACE,oCACE,4BAAKA,EAAQ1M,MACb,iCAAO0M,EAAQL,QACf,4BAAKK,EAAQpM,OC5GZ,IAAM6M,GACX,WACEvL,EACAwL,GAMC,IALDvH,EAKA,uDALK2C,KAAKC,OAAO,KACjB4E,EAIA,uDAJiB,IACjBC,EAGA,uDAHe,OACfC,EAEA,uDAFmB,UACnBC,EACA,uDADa,IACb,oBACA9E,KAAK9G,SAAWA,EAChB8G,KAAK0E,cAAgBzE,WAAWyE,GAChC1E,KAAK+E,eAAiBJ,EACtB3E,KAAKgF,aAA+B,GAAhBN,EACpB1E,KAAK4E,aAAeA,EACpB5E,KAAK6E,iBAAmBA,EACxB7E,KAAKiF,YAAcH,EACnB9E,KAAK7C,GAAKA,GAID+H,GACX,aAA2B,+CAAZC,EAAW,yBAAXA,EAAW,gBACxBnF,KAAKpM,QAAUuR,EACfnF,KAAKjG,eAAiBiG,KAAKpM,QAAQiN,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAE4D,gBAAe,GACzE1E,KAAKoF,cAAsC,GAAtBpF,KAAKjG,gBCtBf,SAASsL,GAAT,GAIX,IAHFC,EAGC,EAHDA,kBACA1H,EAEC,EAFDA,OACA8D,EACC,EADDA,aACC,EAC+BtN,mBAASsN,GADxC,mBACM6D,EADN,KACgBC,EADhB,KAGK5D,EAAc,SAACjG,GACnB,IAAMkG,EAAQ,eAAMlG,EAAE4B,OAAOjG,KAAOqE,EAAE4B,OAAOhI,OAC7CiQ,GAAY,SAAC1D,GAAD,mBAAC,eAAoBA,GAAcD,OAkBjD,OACE,6BACE,0BAAMzE,SAjBqB,SAACzB,GAC9BA,EAAEG,iBACF,IAAI2J,EAAc,IAAIhB,GACpBc,EAASrM,SACTqM,EAASb,cACTa,EAASpI,IAEXmI,EAAkBG,GAEdF,EAASpI,KACXuE,EAAe+D,GAEjBD,EAAY9D,GACZ9D,MAKI,yBAAKzH,UAAU,aACb,2BAAOkH,QAAQ,YAAf,YACA,2BACE9H,MAAOgQ,EAASrM,SAChBoE,SAAUsE,EACVhK,KAAK,OACLN,KAAK,WACL0K,YAAY,uBACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2BAAOkH,QAAQ,iBAAf,WACA,2BACE9H,MAAOgQ,EAASb,cAChBpH,SAAUsE,EACVhK,KAAK,SACLN,KAAK,gBACL0K,YAAY,kBACZxE,UAAQ,KAGZ,6BACA,yBAAKrH,UAAU,aACb,2CCpDK,SAASuP,KAAe,IAAD,EACwBpP,qBAC1DtC,GADMW,EAD4B,EAC5BA,sBAAuBC,EADK,EACLA,yBAczB+Q,EAAiB,SAACJ,GACtB,IAAIK,EAAerT,KAAKC,MACtBJ,aAAaE,QAAQ,2BAEvBsT,EAAeA,EAAapS,QAAO,SAACqS,GAAD,OAASA,EAAI1I,KAAOoI,EAASpI,OACnDrK,KAAKyS,GAClBnT,aAAaC,QAAQ,wBAAyBE,KAAKQ,UAAU6S,IAC7DhR,EACErC,KAAKC,MAAMJ,aAAaE,QAAQ,4BAG9BwT,EAAiB,SAACP,GACtB,GAAInS,OAAOwI,QAAQ,mDAAiD,CAClE,IAAIgK,EAAerT,KAAKC,MACtBJ,aAAaE,QAAQ,0BAEvBsT,EAAeA,EAAapS,QAAO,SAACqS,GAAD,OAASA,EAAI1I,KAAOoI,EAASpI,MAChE/K,aAAaC,QACX,wBACAE,KAAKQ,UAAU6S,IAEjBhR,EACErC,KAAKC,MAAMJ,aAAaE,QAAQ,2BAElCc,OAAOC,MAAM,kBAUjB,OANAgC,qBAAU,WACRT,EACErC,KAAKC,MAAMJ,aAAaE,QAAQ,6BAGjC,IAED,yBAAK6D,UAAW,YACd,6BACA,kBAACsH,EAAD,KACE,kBAAC4H,GAAD,CACEC,kBAlDY,SAACC,GACnB,IAAIK,EAAerT,KAAKC,MACtBJ,aAAaE,QAAQ,0BAEvBsT,EAAa9S,KAAKyS,GAClBnT,aAAaC,QAAQ,wBAAyBE,KAAKQ,UAAU6S,IAC7DhR,EACErC,KAAKC,MAAMJ,aAAaE,QAAQ,4BA4C5BoP,aAAc,CACZxI,SAAU,GACVwL,cAAe,OAIrB,6BACA,uCACA,6BACA,+BACE,+BACE,4BACE,wCACA,yCAGJ,+BACG/P,EAAsBsF,KAAI,SAACsL,GAAD,OACzB,kBAAC/G,EAAD,CACEkB,KAAM6F,EACNrK,IAAKqK,EAASpI,GACdsC,aAAcqG,EACdvG,IAAK,kBAACwG,GAAD,CAAaR,SAAUA,KAE5B,kBAACF,GAAD,CACEC,kBAAmBK,EACnBjE,aAAc6D,WAU9B,SAASQ,GAAT,GAAoC,IAAbR,EAAY,EAAZA,SACrB,OACE,oCACE,4BAAKA,EAASrM,UACd,iCAAOqM,EAASb,cAAc5N,QAAQ,K,sBChGvBiF,G,WACnB,aAOG,IAAD,OANApJ,EAMA,uDANc,kBACdmB,EAKA,uCAJAL,EAIA,uCAHAG,EAGA,uCAFAF,EAEA,uCADAG,EACA,2DACAmM,KAAKrN,YAAcA,EACnBqN,KAAKlM,SAAWA,EAChBkM,KAAKgG,mBAAqB,IAC1BhG,KAAKvM,SAAWA,EAChBuM,KAAKpM,QAAUA,EACfoM,KAAKtM,SAAWA,EAChBsM,KAAKnM,OAASA,EAEd,IAAMoS,EAAqB,kBACzB,EAAKxS,SAASwN,aAAahH,KAAI,SAACmI,GAC9B,MAAO,CACLrH,QAASqH,EAAKlB,SACd9F,MAAOgH,EAAKf,UACZhG,IACG,EAAK5B,YAAYvC,cAChB,EAAKzD,SAAS8N,sBACfa,EAAKjB,cAAgB,KACxBtK,SACG,EAAK4C,YAAYvC,cAChB,EAAKzD,SAAS8N,sBACfa,EAAKjB,cAAgB,KACtBiB,EAAKf,UACP/F,cAAe8G,EAAKjB,cACpB5F,UAAW6G,EAAKd,gBAChB9F,QAAS4G,EAAKhC,YACd3E,KAAM2G,EAAK3G,UAIXyK,EAAS,SAACC,GACd,MAAO,CACLC,qBAAsB,EAAK3S,SAASuN,eAEpCqF,iBAAkB,EAAK3S,SAASoG,eAAiBqM,EAEjDG,WAAY,EAAK1S,QAAQmG,eAAiBoM,EAE1CI,UAAW,EAAK1S,OAAOuG,kBAEvBoM,gBACG,EAAK/S,SAASuN,eACb,EAAKtN,SAASoG,eAAiBqM,EAC/B,EAAKvS,QAAQmG,eAAiBoM,EAC9B,EAAKtS,OAAOuG,mBACd,EAAK4L,mBAEPS,YACE,EAAKhT,SAASuN,eACd,EAAKtN,SAASoG,eAAiBqM,EAC/B,EAAKvS,QAAQmG,eAAiBoM,EAC9B,EAAKtS,OAAOuG,mBACX,EAAK3G,SAASuN,eAAiBmF,EAC9B,EAAKzS,SAASoG,eAAiBqM,EAC/B,EAAKvS,QAAQmG,eAAiBoM,EAC9B,EAAKtS,OAAOuG,kBAAoB+L,GAChC,EAAKH,qBAIbhG,KAAKvG,YAAc,CACjBxC,MAAO+I,KAAKvM,SAASsN,WACrB7J,cAAe8I,KAAKpM,QAAQmG,eAAiBiG,KAAKtM,SAASoG,eAC3D3C,UAAW6I,KAAKvM,SAASuN,eACzBxJ,SAAUwI,KAAKvM,SAAS+D,SACxBC,UACEuI,KAAKvM,SAASsN,YACbf,KAAKpM,QAAQmG,eAAiBiG,KAAKtM,SAASoG,gBAC7CkG,KAAKvM,SAASuN,eACdhB,KAAKvM,SAAS+D,UAGlBwI,KAAKzG,WAAa,CAChBtC,MAAkC,GAA3B+I,KAAKvM,SAASsN,WACrB7J,cACiE,IAA9D8I,KAAKpM,QAAQmG,eAAiBiG,KAAKtM,SAASoG,gBAC/C3C,UAA0C,GAA/B6I,KAAKvM,SAASuN,eACzBxJ,SAAmC,GAAzBwI,KAAKvM,SAAS+D,SACxBC,UAKE,IAJCuI,KAAKvM,SAASsN,YACZf,KAAKpM,QAAQmG,eAAiBiG,KAAKtM,SAASoG,gBAC7CkG,KAAKvM,SAASuN,eACdhB,KAAKvM,SAAS+D,WAIpBwI,KAAKpJ,YAAc,CACjBkE,gBAAiBmL,IACjB9K,mBAAoB8K,IAAqBpF,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAEzF,MAAK,GACrExE,SAAUoP,IAAqBpF,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAEjK,WAAU,GAChEE,eAC6D,GAA3DkP,IAAqBpF,QAAO,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAIiE,EAAEjK,WAAU,IAI1DmJ,KAAK0G,iBAAmBR,EAAO,GAC/BlG,KAAK2G,eAAiBT,EAAO,GAC7BlG,KAAK4G,cAAgBV,EAAO,IAI5BlG,KAAKvJ,IAAO,WAEV,IAAIoQ,EAAqB,EACrBC,EAAY,EAAKvN,WAAW9B,UAC5BsP,EAAab,EAAO,GACpBc,GAA+C,EAA1BD,EAAWN,YAChCQ,EAAe,EACfC,EAAW,EACf,GAAIJ,GAAa,EACf,MAAO,CACLpQ,QAAS,+BACTyQ,qBAAsB,iBAGxB,KAAOH,EAAqB,GAC1BC,EAAeD,EACfE,EAAWJ,GACXE,GAAsBF,GACG,IACvBA,GAAwB,KACxBD,KAGJ,IAAIO,EAAatH,KAAKuH,OAAwB,EAAhBJ,EAAqBC,EAAY,IAC/D,MAAO,CACLxQ,QAAQ,GAAD,OAAKmQ,EAAL,sBAAqCO,EAArC,WACPD,qBAAsBJ,EAAWN,aA1B3B,G,mDAkCDnP,GACX0I,KAAKrN,YAAc2E,I,2BAGVgQ,GACTtH,KAAKlM,SAAWwT,I,6BAGLC,GACXvH,KAAKgG,mBAAqBuB,K,qCAGPjQ,EAAMgQ,EAAKlF,EAAMyD,EAAK2B,EAAMC,GAM/C,OADc,IAAI1L,EAAQzE,EAAMgQ,EAJvB,aAAO3G,EAAP,aAAmByB,IACpB,aAAO8C,GAAP,aAAkBW,IACjB,aAAOjC,GAAP,aAAmB4D,IACpB,aAAO7E,GAAP,aAAiB8E,S,KC/Jd,SAAS/L,KAAiB,IAAD,EASlCpF,qBAAWtC,GAPbe,EAFoC,EAEpCA,mBACAF,EAHoC,EAGpCA,uBACAR,EAJoC,EAIpCA,uBACAE,EALoC,EAKpCA,qBACAE,EANoC,EAMpCA,uBACAE,EAPoC,EAOpCA,sBACAQ,EARoC,EAQpCA,YAGIuS,EAAY,WAChB,IAAMC,EAAe5L,GAAQ6L,cAC3B7S,EACAF,EACAR,EACAM,EACAF,EACAF,GAGFrC,EAAQ2V,YAAYF,IAehBjL,EAAUC,cAEhB,SAASmL,EAAcC,GACrB,OAAwB,IAAjBA,EAAMxL,OAmBf,OACE,yBAAKpG,UAAU,iBACb,4BAAQmG,MAAO,CAAEsC,WAAY,SAAWrI,QAlBhB,WAExB,CACElC,EACAM,EACAF,EACAF,GACAyT,KAAKF,GAEP1U,OAAOC,MAAM,0DAEbqU,IACAhL,EAAQ5J,KAAR,eAMA,mBAGA,4BAAQyD,QAASmR,GAAjB,gBACA,4BAAQpL,MAAO,CAAEsC,WAAY,OAASrI,QAxCvB,WAEfnD,OAAOwI,QACL,qEAGF1J,EAAQ+V,oBACR9S,OAiCA,cC/DS,SAAS+S,KACtB,OACE,yBAAK/R,UAAW,iBACd,kBAAC8L,EAAD,MACA,kBAACmB,GAAD,MACA,kBAACe,GAAD,MACA,kBAACuB,GAAD,MACA,kBAAC,GAAD,OCRS,SAASyC,KAAU,IACxBpT,EAAuBuB,qBAAWtC,GAAlCe,mBADuB,EAEyBX,oBAAS,GAFlC,mBAExBgU,EAFwB,KAEFrL,EAFE,KAW/B,OAPA1H,qBAAU,WACmB,gBAAvBN,GACFgI,GAAwB,KAGzB,IAGD,yBAAK5G,UAAU,QACb,wBAAIA,UAAU,eAAd,gBACgBpB,EAAmBiH,gBAGjCoM,GACA,kBAACtL,EAAD,CAAOC,wBAAyBA,IAEjCqL,GAAwB,kBAACF,GAAD,OCpBhB,SAASxM,KAAiB,IAC/B3G,EAAuBuB,qBAAWtC,GAAlCe,mBAUR,OACE,6BAASoB,UAAU,kBACjB,kBAAC,IAAD,CAAMC,GAAG,WACP,uBAAGsC,MAAM,eAAevC,UAAU,kBAEpC,kBAAC,IAAD,CAAMC,GAAG,YACP,uBAAGsC,MAAM,0BAA0BvC,UAAU,uBAE/C,kBAAC,IAAD,CAAMC,GAAG,KACP,uBACEG,QAlBa,SAACoF,GAChBvI,OAAOwI,QAAQ,sDACjB1J,EAAQ2J,cAAc9G,GACtB3B,OAAOC,MAAP,sBAA4B0B,EAA5B,kBAEA4G,EAAEG,kBAcEpD,MAAM,iBACNvC,UAAU,oBCzBL,SAASkS,GAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BlR,EAAQ,CACZM,QAAS,CACPY,OAAQ,CACN,qBACA,iBACA,UACA,SACA,eAEFW,OAAQ,CACNC,SAAU,WAGd7B,OAAQ,CACNiR,EAAOlC,qBACPkC,EAAOjC,iBACPiC,EAAOhC,WACPgC,EAAO/B,UACP+B,EAAO9B,iBAGX,OACE,yBACElK,MAAO,CACLiM,UAAW,OACXzK,QAAS,OACT5F,MAAO,OACP8G,eAAgB,WAGlB,kBAAC,IAAD,CACEtH,QAASN,EAAMM,QACfL,OAAQD,EAAMC,OACdO,KAAK,QACLM,MAAM,SCnCC,SAASsQ,GAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,OAAQH,EAAU,EAAVA,OAC3C,OACE,yBAAKnS,UAAU,cACb,4BAAKsS,GACL,6BACE,+BACE,+BACE,4BACE,uCACA,wCAGJ,+BACE,4BACE,kDACA,gCAAMH,EAAOlC,qBAAqBtP,QAAQ,KAE5C,4BACE,8CACA,gCAAMwR,EAAOjC,iBAAiBvP,QAAQ,KAExC,4BACE,uCACA,gCAAMwR,EAAOhC,WAAWxP,QAAQ,KAElC,4BACE,sCACA,gCAAMwR,EAAO/B,UAAUzP,QAAQ,KAEjC,4BACE,2CACA,gCAAMwR,EAAO9B,eAAe1P,QAAQ,KAEtC,4BACE,4CACA,gCAAMwR,EAAO7B,YAAY3P,QAAQ,QAIlC,IACP,kBAACuR,GAAD,CAAYC,OAAQA,KCtCX,SAASI,KAAc,IAAD,EACepS,qBAChDtC,GADMe,EAD2B,EAC3BA,mBAAoBE,EADO,EACPA,kBAG5B,OACE,6BACE,yBAAKkB,UAAU,QACb,wBAAIA,UAAU,eAAd,cACcpB,EAAmBiH,cAC/B,kBAAC,GAAD,OAED/G,EAAkByR,kBACjB,yBAAKvQ,UAAU,mBACb,kBAACqS,GAAD,CACEC,OAAO,WACPH,OAAQrT,EAAkByR,mBAE5B,kBAAC8B,GAAD,CACEC,OAAO,WACPH,OAAQrT,EAAkB0R,iBAE5B,kBAAC6B,GAAD,CACEC,OAAO,YACPH,OAAQrT,EAAkB2R,mBC1BzB,SAAS+B,KACtB,OACE,yBAAKxS,UAAU,QACb,wBAAIA,UAAU,eAAd,kBACA,yBAAKA,UAAU,eACb,oMAKA,uWAK2D,KAE3D,2HAIA,6BACA,oDCtBO,SAASyS,KACtB,OACE,yBAAKzS,UAAU,QACb,wBAAIA,UAAU,eAAd,aCHS,SAAS0S,KACtB,OACE,yBAAK1S,UAAU,QACb,wBAAIA,UAAU,eAAd,cAEA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,yBACE2S,IAAKC,EAAQ,IACbC,IAAI,8BAEN,6IAIA,sMAKA,0EAGF,yBAAK7S,UAAU,UACb,yBACE2S,IAAKC,EAAQ,IACbC,IAAI,8BAEN,kNAG+C,KAE/C,yBACEF,IAAKC,EAAQ,IACbC,IAAI,8BAEN,yOAMA,yIAIA,+DAEF,yBAAK7S,UAAU,UACb,yBACE2S,IAAKC,EAAQ,IACbC,IAAI,8BAEN,qNAGqD,KAErD,kKAKA,yBACEF,IAAKC,EAAQ,IACbC,IAAI,iCCZDC,OArCf,WACE,IAAMxK,EAAUC,iBAAO,MACvB,OACE,yBAAKvI,UAAU,OACb,kBAACjC,EAAD,KACE,kBAAC0B,EAAD,KACE,kBAACM,EAAD,MACA,kBAACG,EAAD,MAEA,kBAAC,IAAD,CACE6S,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN,kBAACC,EAAA,EAAD,KACE,kBAAClL,EAAA,EAAD,CACEhD,IAAKiO,EAASjO,IACdmD,WAAW,OACXD,QAAS,KACToB,IAAKf,GAEL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4K,KAAM,IAAKC,OAAK,EAACC,UAAWtN,IACnC,kBAAC,IAAD,CAAOoN,KAAM,WAAYE,UAAWxN,IACpC,kBAAC,IAAD,CAAOsN,KAAM,UAAWE,UAAWpB,KACnC,kBAAC,IAAD,CAAOkB,KAAM,UAAWE,UAAWb,KACnC,kBAAC,IAAD,CAAOW,KAAM,YAAaE,UAAWX,KACrC,kBAAC,IAAD,CAAOS,KAAM,gBAAiBE,UAAWV,KACzC,kBAAC,IAAD,CAAOQ,KAAM,SAAUE,UAAWZ,eChClCa,QACW,cAA7BpW,OAAO+V,SAASM,UAEe,UAA7BrW,OAAO+V,SAASM,UAEhBrW,OAAO+V,SAASM,SAASC,MACvB,2DCZNC,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1faa9d5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner2.e4c0df49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dashboard.0c02d0af.png\";","module.exports = __webpack_public_path__ + \"static/media/SelectProjectName.04fe5279.png\";","module.exports = __webpack_public_path__ + \"static/media/PlanerPage.ca5ecf97.png\";","module.exports = __webpack_public_path__ + \"static/media/Preview.332f5430.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Budget.b409cc01.PNG\";","export default class Storage {\r\n  static projectName = () => {\r\n    return localStorage.getItem(\"CurrentProjectName\");\r\n  };\r\n  static industry = () => localStorage.getItem(\"CurrentProjectIndustry\");\r\n\r\n  static setCurrentProjectName(CurrentProj) {\r\n    localStorage.setItem(\"CurrentProjectName\", CurrentProj);\r\n  }\r\n\r\n  static setCurrentProjectIndustry(CurrentProj) {\r\n    localStorage.setItem(\"CurrentProjectIndustry\", CurrentProj);\r\n  }\r\n\r\n  static getProjecs() {\r\n    let projects;\r\n    if (localStorage.getItem(\"projects\") === null) {\r\n      projects = [];\r\n    } else {\r\n      projects = JSON.parse(localStorage.getItem(\"projects\"));\r\n    }\r\n    return projects;\r\n  }\r\n\r\n  static saveProject(project) {\r\n    Storage.updateProject(project.projectName);\r\n    const projects = Storage.getProjecs();\r\n    projects.push(project);\r\n    localStorage.setItem(\"projects\", JSON.stringify(projects));\r\n  }\r\n\r\n  static removeProject(projName) {\r\n    const projects = Storage.getProjecs();\r\n    projects.forEach((project, index) => {\r\n      if (project.projectName === projName) {\r\n        projects.splice(index, 1);\r\n        localStorage.setItem(\"projects\", JSON.stringify(projects));\r\n      }\r\n    });\r\n  }\r\n  static updateProject(projName) {\r\n    const projects = Storage.getProjecs();\r\n    projects.forEach((project, index) => {\r\n      if (project.projectName === projName) {\r\n        projects.splice(index, 1);\r\n        localStorage.setItem(\"projects\", JSON.stringify(projects));\r\n        window.alert(`The project ${project.projectName} Has being updated`);\r\n      }\r\n    });\r\n  }\r\n\r\n  static loadProject(nameOfTheProjectToLoad) {\r\n    //open an archived project\r\n    const projectToLoad = Storage.getProjecs().filter(\r\n      (project) => project.projectName === nameOfTheProjectToLoad\r\n    )[0];\r\n\r\n    localStorage.setItem(\r\n      \"currentProjectProducts\",\r\n      JSON.stringify(projectToLoad.products.products)\r\n    );\r\n    localStorage.setItem(\r\n      \"currentProjectExpenses\",\r\n      JSON.stringify(projectToLoad.expenses.items)\r\n    );\r\n    localStorage.setItem(\r\n      \"currentProjectPayroll\",\r\n      JSON.stringify(projectToLoad.payroll.payroll)\r\n    );\r\n    localStorage.setItem(\r\n      \"currentProjectAssets\",\r\n      JSON.stringify(projectToLoad.assets.items)\r\n    );\r\n    localStorage.setItem(\"CurrentProjectName\", projectToLoad.projectName);\r\n    localStorage.setItem(\"CurrentProjectIndustry\", projectToLoad.industry);\r\n  }\r\n\r\n  static newProject() {\r\n    let emptyArr = [];\r\n    localStorage.setItem(\"currentProjectProducts\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"currentProjectExpenses\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"currentProjectPayroll\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"currentProjectAssets\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"CurrentProjectName\", \"New Project\");\r\n    localStorage.setItem(\"CurrentProjectIndustry\", \"not defined\");\r\n  }\r\n\r\n  static clearProjectForms() {\r\n    let emptyArr = [];\r\n    localStorage.setItem(\"currentProjectProducts\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"currentProjectExpenses\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"currentProjectPayroll\", JSON.stringify(emptyArr));\r\n    localStorage.setItem(\"currentProjectAssets\", JSON.stringify(emptyArr));\r\n  }\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport Storage from \"../clases/Storage\";\r\n\r\nexport const CurrentProjectContext = createContext();\r\n\r\nexport function CurrentProjectContextProvider(props) {\r\n  const [currentProjectProducts, setCurrentProjectProducts] = useState([]);\r\n  const [currentProjectAssets, setCurrentProjectAssets] = useState([]);\r\n  const [currentProjectExpenses, setCurrentProjectExpenses] = useState([]);\r\n  const [currentProjectPayroll, setCurrentProjectPayroll] = useState([]);\r\n  const [currentProjectIndustry, setCurrentProjectIndustry] = useState(\"\");\r\n  const [currentProjectName, setCurrentProjectName] = useState(\"\");\r\n  const [currentProjecBody, setCurrentProjecBody] = useState([]);\r\n\r\n  function updateState() {\r\n    setCurrentProjecBody(\r\n      Storage.getProjecs().filter(\r\n        (proj) =>\r\n          proj.projectName === localStorage.getItem(\"CurrentProjectName\")\r\n      )[0]\r\n    );\r\n    setCurrentProjectProducts(\r\n      JSON.parse(localStorage.getItem(\"currentProjectProducts\"))\r\n    );\r\n    setCurrentProjectExpenses(\r\n      JSON.parse(localStorage.getItem(\"currentProjectExpenses\"))\r\n    );\r\n\r\n    setCurrentProjectPayroll(\r\n      JSON.parse(localStorage.getItem(\"currentProjectPayroll\"))\r\n    );\r\n    setCurrentProjectAssets(\r\n      JSON.parse(localStorage.getItem(\"currentProjectAssets\"))\r\n    );\r\n\r\n    setCurrentProjectName(localStorage.getItem(\"CurrentProjectName\"));\r\n    setCurrentProjectIndustry(localStorage.getItem(\"CurrentProjectIndustry\"));\r\n  }\r\n  function resetLocalStorage() {\r\n    Storage.newProject();\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateState();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CurrentProjectContext.Provider\r\n        value={{\r\n          currentProjectProducts,\r\n          setCurrentProjectProducts,\r\n          currentProjectAssets,\r\n          setCurrentProjectAssets,\r\n          currentProjectExpenses,\r\n          setCurrentProjectExpenses,\r\n          currentProjectPayroll,\r\n          setCurrentProjectPayroll,\r\n          currentProjectIndustry,\r\n          setCurrentProjectIndustry,\r\n          currentProjectName,\r\n          setCurrentProjectName,\r\n          updateState,\r\n          resetLocalStorage,\r\n          currentProjecBody,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </CurrentProjectContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport Storage from \"../clases/Storage\";\r\n\r\nexport const AchivedProjectsContext = createContext();\r\n\r\nexport function AchivedProjectsContextProvider(props) {\r\n  const [archivedProjects, setArchivedProjects] = useState([]);\r\n\r\n  function updateArchived() {\r\n    setArchivedProjects(Storage.getProjecs());\r\n  }\r\n  function LoadProject(projectName) {\r\n    Storage.loadProject(projectName);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateArchived();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AchivedProjectsContext.Provider\r\n        value={{\r\n          archivedProjects,\r\n          setArchivedProjects,\r\n          updateArchived,\r\n          LoadProject,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </AchivedProjectsContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <div className=\"logo\">\r\n          <div className=\"logo-icon\">[LOGO]</div>\r\n          <h1 className=\"logo-name\">APP NAME</h1>\r\n        </div>\r\n      </Link>\r\n      <div className=\"configIcons\">\r\n        <span>Y</span>\r\n        <span>J</span>\r\n        <span>V</span>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CurrentProjectContext } from \"../context/CurrentProjectContext\";\r\n\r\nexport default function Nav() {\r\n  const { updateState, resetLocalStorage } = useContext(CurrentProjectContext);\r\n  const handleNewProject = () => {\r\n    resetLocalStorage();\r\n    updateState();\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"main-menu\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">\r\n              <i className=\"fa fa-home fa-2x\"></i>\r\n              <span className=\"nav-text\">Dashboard</span>\r\n            </Link>\r\n          </li>\r\n          <li onClick={handleNewProject}>\r\n            <Link to=\"/planer\">\r\n              <i className=\"fa fa-bar-chart-o fa-2x\"></i>\r\n              <span className=\"nav-text\">New Project</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/instructions\">\r\n              <i className=\"fa fa-info fa-2x\"></i>\r\n              <span className=\"nav-text\">Instructions</span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">\r\n              <i className=\"fa fa-font fa-2x\"></i>\r\n              <span className=\"nav-text\">About</span>\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <li>\r\n            <Link to=\"/\">\r\n              <i className=\"fa fa-table fa-2x\"></i>\r\n              <span className=\"nav-text\">Generate Budget</span>\r\n            </Link>\r\n          </li> */}\r\n\r\n          {/* <li className=\"has-subnav\">\r\n            <Link to=\"/\">\r\n              <i className=\"fa fa-list fa-2x\"></i>\r\n              <span className=\"nav-text\">My projects list (On Dev)</span>\r\n            </Link>\r\n          </li> */}\r\n        </ul>\r\n\r\n        <ul className=\"logout\">\r\n          <li className=\"has-subnav\">\r\n            <Link to=\"/settings\">\r\n              <i className=\"fa fa-cogs fa-3x\"></i>\r\n              <span className=\"nav-text\">Settings (On Dev)</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\n\r\nexport default function RoiPanel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n  const { roi } = currentProjecBody;\r\n\r\n  return (\r\n    <div className=\"dataBox roiPanel\">\r\n      <h2>ROI TIME</h2>\r\n      <br />\r\n      {roi && <p>{currentProjecBody.roi.roiTime}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\n\r\nexport default function EquilibriumPanel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n\r\n  const { equilibrium } = currentProjecBody;\r\n  return (\r\n    <div className=\"dataBox equilibriumPanel\">\r\n      <p>EQUILIBRIUM</p>\r\n      <br />\r\n      {equilibrium && <p>Monthly: ${equilibrium.eqAmount.toFixed(2)}</p>}\r\n      {equilibrium && <p>Yearly: ${equilibrium.yearlyEqAmount.toFixed(2)}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default function StackedBar({\r\n  sales,\r\n  fixedExpenses,\r\n  salesCost,\r\n  totalTax,\r\n  netIncome,\r\n}) {\r\n  const state = {\r\n    series: [\r\n      {\r\n        name: \"Sales\",\r\n        data: [sales, 0],\r\n      },\r\n      {\r\n        name: \"Taxes\",\r\n        data: [0, totalTax],\r\n      },\r\n      {\r\n        name: \"Fixed Cost\",\r\n        data: [0, fixedExpenses],\r\n      },\r\n      {\r\n        name: \"Sales Cost\",\r\n        data: [0, salesCost],\r\n      },\r\n      {\r\n        name: \"Net Income\",\r\n        data: [0, 0, netIncome],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        stacked: true,\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true,\r\n        },\r\n      },\r\n      stroke: {\r\n        width: 3,\r\n        colors: [\"#fff\"],\r\n      },\r\n\r\n      xaxis: {\r\n        categories: [\"Income\", \"Expense\", \"Net Income\"],\r\n        labels: {\r\n          formatter: function (val) {\r\n            return null;\r\n          },\r\n        },\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: undefined,\r\n        },\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \"$RD\" + val;\r\n          },\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n      legend: {\r\n        position: \"top\",\r\n        horizontalAlign: \"left\",\r\n        offsetX: 50,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"bar\"\r\n        width=\"500\"\r\n        height=\"200\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport StackedBar from \"./charts/StackedBar\";\r\n\r\nexport default function YearlyFlowPanel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n  const { yearlyFlow } = currentProjecBody;\r\n\r\n  return (\r\n    <div className=\"dataBox yearlyFlowPanel\">\r\n      <h2>YEARLY FLOW</h2>\r\n      {yearlyFlow && (\r\n        <StackedBar\r\n          sales={yearlyFlow.sales.toFixed(2)}\r\n          fixedExpenses={yearlyFlow.fixedExpenses.toFixed(2)}\r\n          salesCost={yearlyFlow.salesCost.toFixed(2)}\r\n          totalTax={yearlyFlow.totalTax.toFixed(2)}\r\n          netIncome={yearlyFlow.netIncome.toFixed(2)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport StackedBar from \"./charts/StackedBar\";\r\n\r\nexport default function MonthlyFlowPanel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n  const { monthlyFlow } = currentProjecBody;\r\n\r\n  return (\r\n    <div className=\"dataBox monthlyFlowPanel\">\r\n      <h2>MONTHLY FLOW</h2>\r\n      {monthlyFlow && (\r\n        <StackedBar\r\n          sales={monthlyFlow.sales.toFixed(2)}\r\n          fixedExpenses={monthlyFlow.fixedExpenses.toFixed(2)}\r\n          salesCost={monthlyFlow.salesCost.toFixed(2)}\r\n          totalTax={monthlyFlow.totalTax.toFixed(2)}\r\n          netIncome={monthlyFlow.netIncome.toFixed(2)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default function Donut({ expensesAmount, payrollAmount }) {\r\n  const state = {\r\n    options: {\r\n      labels: [\"Payroll\", \"Fixed Expenses\"],\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n    },\r\n    series: [payrollAmount, expensesAmount],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"donut\"\r\n        width=\"350\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\n\r\nimport Donut from \"./charts/Donut\";\r\n\r\nexport default function FixedCostPanel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n  const { expenses, payroll } = currentProjecBody;\r\n  return (\r\n    <div className=\"dataBox fixedCostPanel\">\r\n      <h2>MONTHLY FIXED COST</h2>\r\n      {expenses && (\r\n        <Donut\r\n          expensesAmount={expenses.monthlyExpense}\r\n          payrollAmount={payroll.monthlyPayroll}\r\n        />\r\n      )}\r\n      {expenses && (\r\n        <p> Total: {expenses.monthlyExpense + payroll.monthlyPayroll} </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default function MultyCircle({ assets }) {\r\n  let seriesArray = assets.items.map((asset) =>\r\n    ((asset.totalCost / assets.assetsTotalAmount) * 100).toFixed(2)\r\n  );\r\n  let labelsArray = assets.items.map(\r\n    (asset) => `${asset.name}  $${asset.totalCost.toFixed(2)}`\r\n  );\r\n\r\n  const state = {\r\n    series: seriesArray,\r\n    options: {\r\n      chart: {\r\n        height: 350,\r\n        type: \"radialBar\",\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          dataLabels: {\r\n            name: {\r\n              fontSize: \"22px\",\r\n            },\r\n            value: {\r\n              fontSize: \"16px\",\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: \"Total\",\r\n              formatter: function (w) {\r\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                return \"$\" + assets.assetsTotalAmount;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      labels: labelsArray,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"radialBar\"\r\n        height={350}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport MultyCircle from \"./charts/MultyCircle\";\r\nexport default function AssetsPannel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n\r\n  const { assets } = currentProjecBody;\r\n  return (\r\n    <div className=\"dataBox assetsPanel\">\r\n      <h2>ASSETS</h2>\r\n      {assets && <MultyCircle assets={assets} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\n\r\nexport default function UnitsEquilibriumPanel() {\r\n  const { currentProjecBody } = useContext(CurrentProjectContext);\r\n\r\n  const { equilibrium } = currentProjecBody;\r\n\r\n  return (\r\n    <div className=\"dataBox unitsEquilibriumPanel\">\r\n      <h2>MONTHLY EQUILIBRIUM BY PRODUCT</h2>\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Cost</th>\r\n            <th>Price</th>\r\n            <th>Brute Margin</th>\r\n            <th>% Margin</th>\r\n            <th>Participation</th>\r\n            <th>EQ-Units</th>\r\n            <th>EQ-Sales</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {equilibrium &&\r\n            equilibrium.unitEquilibrium.map((product) => (\r\n              <ProductEqulibriumRow\r\n                productObject={product}\r\n                key={product.product}\r\n              />\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      {equilibrium && (\r\n        <p> Total units to sale: {equilibrium.EquilibriumInUnits.toFixed(1)}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductEqulibriumRow({ productObject }) {\r\n  const {\r\n    product,\r\n    price,\r\n    Equ,\r\n    eqAmount,\r\n    participation,\r\n    bMPercent,\r\n    bMargen,\r\n    cost,\r\n  } = productObject;\r\n  return (\r\n    <tr>\r\n      <td>{product}</td>\r\n      <td>${cost.toFixed(2)}</td>\r\n      <td>${price.toFixed(2)}</td>\r\n      <td>${bMargen.toFixed(2)}</td>\r\n      <td>{bMPercent.toFixed(2)}%</td>\r\n      <td>{participation.toFixed(2)}%</td>\r\n      <td>${Equ.toFixed(2)}</td>\r\n      <td>${eqAmount.toFixed(2)}</td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Storage from \"../../clases/Storage\";\r\n\r\nexport default function ActionButtons() {\r\n  const { currentProjectName } = useContext(CurrentProjectContext);\r\n\r\n  const handleDelete = (e) => {\r\n    if (window.confirm(\"¿Are you sure you want to delete this project?\")) {\r\n      Storage.removeProject(currentProjectName);\r\n      window.alert(`The project ${currentProjectName} was deleted`);\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"actionbuttons2\">\r\n      <Link to=\"/planer\">\r\n        <i title=\"Edit Project\" className=\"fa fa-table \"></i>\r\n      </Link>\r\n      <Link to=\"/budget\">\r\n        <i title=\"Go to Budget\" className=\"fa fa-list\"></i>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <i\r\n          onClick={handleDelete}\r\n          title=\"Delete Project\"\r\n          className=\"fa fa-trash-o\"\r\n        ></i>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../context/CurrentProjectContext\";\r\nimport RoiPanel from \"../components/projectPageComponents/RoiPanel\";\r\nimport EquilibriumPanel from \"../components/projectPageComponents/EquilibriumPanel\";\r\nimport MonthlyFlowPanel from \"../components/projectPageComponents/YearlyFlowPanel\";\r\nimport YearlyFlowPanel from \"../components/projectPageComponents/MonthlyFlowPanel\";\r\nimport FixedCostPanel from \"../components/projectPageComponents/FixedCostPanel\";\r\nimport AssetsPannel from \"../components/projectPageComponents/AssetsPannel\";\r\nimport UnitsEquilibriumPanel from \"../components/projectPageComponents/UnitsEquilibriumPanel\";\r\nimport ActionButtons from \"../components/projectPageComponents/ActionButtons\";\r\n\r\nexport default function Project() {\r\n  const { updateState, currentProjectName } = useContext(CurrentProjectContext);\r\n\r\n  useEffect(() => {\r\n    updateState();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"sectionName\">\r\n        {currentProjectName.toUpperCase()} - PROJECT OVERVIEW\r\n        <ActionButtons />\r\n      </h2>\r\n\r\n      <div className=\"projectPanels\">\r\n        <div className=\"metrics\">\r\n          <RoiPanel />\r\n          <EquilibriumPanel />\r\n          <MonthlyFlowPanel />\r\n          <YearlyFlowPanel />\r\n        </div>\r\n        <FixedCostPanel />\r\n        <AssetsPannel />\r\n        <UnitsEquilibriumPanel />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CurrentProjectContext } from \"../context/CurrentProjectContext\";\r\nimport { AchivedProjectsContext } from \"../context/AchivedProjectsContext\";\r\nimport banner from \"../images/banner2.jpg\";\r\n\r\nexport default function Dashboard() {\r\n  const { updateState, resetLocalStorage } = useContext(CurrentProjectContext);\r\n  const { archivedProjects, updateArchived } = useContext(\r\n    AchivedProjectsContext\r\n  );\r\n\r\n  const bannerBackgound = {\r\n    backgroundImage: `url(${banner})`,\r\n    backgroundSize: \"cover\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetLocalStorage();\r\n    updateState();\r\n    updateArchived();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"sectionName\">DASHBOARD</h2>\r\n      <div className=\"dashboard\" style={bannerBackgound}>\r\n        {archivedProjects.length && (\r\n          <div className=\"projectList\">\r\n            <h2>My Projects</h2>\r\n            <br />\r\n            {archivedProjects.map((project) => (\r\n              <ProjectListItem\r\n                key={project.projectName}\r\n                nameOfTheProject={project.projectName}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProjectListItem({ nameOfTheProject }) {\r\n  const { LoadProject } = useContext(AchivedProjectsContext);\r\n  const { updateState } = useContext(CurrentProjectContext);\r\n  const history = useHistory();\r\n\r\n  const handleOpen = async () => {\r\n    await LoadProject(nameOfTheProject);\r\n    await updateState();\r\n    history.push(`/project`);\r\n  };\r\n  return (\r\n    <div onClick={handleOpen} className=\"ProjectListItem\">\r\n      {nameOfTheProject}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\n\r\nexport default function PopUp({ setProjectNameIsDefined }) {\r\n  const { setCurrentProjectName, setCurrentProjectIndustry } = useContext(\r\n    CurrentProjectContext\r\n  );\r\n  const [projectName, setprojectName] = useState(\"\");\r\n  const [industryName, setIndustryName] = useState(\"\");\r\n\r\n  const handleProjectName = (e) => {\r\n    setprojectName(e.target.value);\r\n  };\r\n\r\n  const handleIndustryName = (e) => {\r\n    setIndustryName(e.target.value);\r\n  };\r\n\r\n  const displayPlaner = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"CurrentProjectName\", projectName);\r\n    localStorage.setItem(\"CurrentProjectIndustry\", industryName);\r\n    setCurrentProjectName(projectName);\r\n    setCurrentProjectIndustry(industryName);\r\n    setProjectNameIsDefined(true);\r\n  };\r\n\r\n  return (\r\n    <div id={\"planerPopUp\"}>\r\n      <h2>SELECT PROJECT NAME</h2>\r\n\r\n      <form className={\"fade\"} onSubmit={displayPlaner}>\r\n        <label htmlFor=\"project-name\">Project Name</label>\r\n        <input type=\"text\" onChange={handleProjectName} required></input>\r\n        <label htmlFor=\"project-industry\">Industry</label>\r\n        <input type=\"text\" onChange={handleIndustryName} required></input>\r\n        <button>Done</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function FormsModal(props) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const Toggle = () => setVisible(!visible);\r\n\r\n  const ContainerStyle = visible\r\n    ? {\r\n        display: \"block\",\r\n        height: \"fit-content\",\r\n        width: \"95%\",\r\n        position: \"absolute\",\r\n        top: \"5rem\",\r\n        zIndex: \"4\",\r\n      }\r\n    : { display: \"none\" };\r\n\r\n  const burttonText = visible ? \"CANCEL\" : \"+ADD+ \";\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={Toggle}>{burttonText}</button>\r\n\r\n      <CSSTransition in={visible} timeout={1000} classNames=\"fader\">\r\n        <div style={ContainerStyle}>\r\n          {\" \"}\r\n          {React.cloneElement(props.children, { Toggle: Toggle })}{\" \"}\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n//the current element is to render all the forms. It Uses ReactClone to pass down the Toggle Functio to the chilldren so the form closes when submmited\r\n","import React, { useState, useRef } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function UpdateModal(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const nodeRef = useRef(null);\r\n\r\n  const Toggle = () => setVisible(!visible);\r\n\r\n  const hadleDelete = () => {\r\n    props.deleteAction(props.item);\r\n  };\r\n\r\n  const ContainerStyle = visible\r\n    ? {\r\n        display: \"block\",\r\n        height: \"fit-content\",\r\n        width: \"95%\",\r\n        position: \"absolute\",\r\n        top: \"5rem\",\r\n        zIndex: \"4\",\r\n      }\r\n    : { display: \"none\" };\r\n\r\n  const buttonstyle = {\r\n    background: \"red\",\r\n    color: \"white\",\r\n    width: \"100%\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"0.8rem\",\r\n    borderRadius: \"8px\",\r\n    margin: \"0.3rem\",\r\n    cursor: \"pointer\",\r\n    textShadow: \"1px 2px 2px rgba(0, 0, 0, 0.6)\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr onDoubleClick={Toggle}>\r\n        {!visible && props.row}\r\n        <CSSTransition\r\n          in={visible}\r\n          nodeRef={nodeRef}\r\n          timeout={400}\r\n          classNames=\"fader\"\r\n        >\r\n          <td ref={nodeRef} style={ContainerStyle}>\r\n            <div>\r\n              {React.cloneElement(props.children, { Toggle: Toggle })}\r\n              <div style={{ display: \"flex\" }}>\r\n                <button\r\n                  style={{ ...buttonstyle, background: \"gray\" }}\r\n                  onClick={Toggle}\r\n                >\r\n                  {\"CANCEL\"}\r\n                </button>\r\n                <button style={buttonstyle} onClick={hadleDelete}>\r\n                  {\"DELETE\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </CSSTransition>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n","export class Product {\r\n  constructor(\r\n    name,\r\n    cost,\r\n    price,\r\n    taxPercent = 18,\r\n    saleProjecton,\r\n    id = Math.random(1000)\r\n  ) {\r\n    //unit metrics\r\n    this.name = name;\r\n    this.cost = parseFloat(cost);\r\n    this.price = parseFloat(price);\r\n    this.taxPercent = parseFloat(taxPercent);\r\n    this.taxAmount = this.price * (taxPercent / 100);\r\n    this.pricePlusTax = this.price + this.taxAmount;\r\n    this.bruteMargin = this.pricePlusTax - this.cost - this.taxAmount;\r\n    this.bruteMarginPercent = (this.bruteMargin / this.pricePlusTax) * 100;\r\n    this.id = id;\r\n    //monthly sales metrics\r\n    this.saleProjecton = parseFloat(saleProjecton); // unidedes que se venderían mensualmente\r\n    this.sales = this.price * this.saleProjecton;\r\n    this.salesPlusTax = this.pricePlusTax * this.saleProjecton;\r\n    this.salesCost = this.cost * this.saleProjecton;\r\n    this.totalSalesTax = this.taxAmount * this.saleProjecton;\r\n    this.salesBruteMargin = this.salesPlusTax - this.salesCost;\r\n    //yearly sales metrics\r\n    this.yearlyUnitsSale = this.saleProjecton * 12;\r\n    this.yearlySale = this.salesPlusTax * 12;\r\n  }\r\n}\r\n\r\nexport class Products {\r\n  constructor(...products) {\r\n    this.products = products;\r\n    this.totalProjectionUnits = this.products.reduce(\r\n      (a, b) => a + b.saleProjecton,\r\n      0\r\n    ); //soma toal de unodases que que se venderan de todos los productos\r\n    this.totalSales = this.products.reduce((a, b) => a + b.salesPlusTax, 0);\r\n    this.totalSalesCost = this.products.reduce((a, b) => a + b.salesCost, 0);\r\n    this.totalTax = this.products.reduce((a, b) => a + b.totalSalesTax, 0);\r\n    this.prodsMetrics = this.products.map((product) => {\r\n      return {\r\n        producto: product.name,\r\n        participacion:\r\n          (product.saleProjecton / this.totalProjectionUnits) * 100,\r\n        ponderateMargin:\r\n          (product.saleProjecton / this.totalProjectionUnits) *\r\n          product.bruteMargin,\r\n        salePrice: product.pricePlusTax,\r\n        bruteMarginPerc: product.bruteMarginPercent,\r\n        bruteMargin: product.bruteMargin,\r\n        cost: product.cost,\r\n      };\r\n    });\r\n    this.totalPondarateMargin = this.prodsMetrics.reduce(\r\n      (a, b) => a + b.ponderateMargin,\r\n      0\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Product } from \"../../../clases/ProductClass\";\r\n\r\nexport default function ProductFrom({\r\n  updateProductList,\r\n  Toggle,\r\n  defaultState,\r\n}) {\r\n  const [product, setProduct] = useState(defaultState);\r\n\r\n  const hadleChange = (e) => {\r\n    const newValue = { [e.target.name]: e.target.value };\r\n    setProduct((prevState) => ({ ...prevState, ...newValue }));\r\n  };\r\n\r\n  const hadleUpdateProductList = (e) => {\r\n    e.preventDefault();\r\n    let newProduct = new Product(\r\n      product.name,\r\n      product.cost,\r\n      product.price,\r\n      product.taxPercent,\r\n      product.saleProjecton,\r\n      product.id\r\n    );\r\n    updateProductList(newProduct);\r\n    //update de default values of the form in case is an update\r\n    if (product.id) {\r\n      defaultState = newProduct;\r\n    }\r\n\r\n    setProduct(defaultState);\r\n    Toggle();\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={hadleUpdateProductList}>\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"name\">Product</label>\r\n          <input\r\n            value={product.name}\r\n            onChange={hadleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Product name\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"cost\">Cost</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"cost\"\r\n            onChange={hadleChange}\r\n            value={product.cost}\r\n            placeholder=\"Unit cost\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            placeholder=\"Unit price\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"saleProjecton\">Projection</label>\r\n          <input\r\n            value={product.saleProjecton}\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            name=\"saleProjecton\"\r\n            placeholder=\"Units to sale monthly\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"taxPercent\">TAX%</label>\r\n          <input\r\n            value={product.taxPercent}\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            name=\"taxPercent\"\r\n            placeholder=\"Tax percent\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div className=\"formImput\">\r\n          <button>DONE</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport FormsModal from \"./FormsModal\";\r\nimport UpdateModal from \"./UpdateModal\";\r\nimport ProductFrom from \"./Forms/ProductFrom\";\r\n\r\nexport default function ProductsList() {\r\n  const { currentProjectProducts, setCurrentProjectProducts } = useContext(\r\n    CurrentProjectContext\r\n  );\r\n\r\n  const addProduct = (product) => {\r\n    let newProducts = JSON.parse(\r\n      localStorage.getItem(\"currentProjectProducts\")\r\n    );\r\n    newProducts.push(product);\r\n    localStorage.setItem(\"currentProjectProducts\", JSON.stringify(newProducts));\r\n    setCurrentProjectProducts(\r\n      JSON.parse(localStorage.getItem(\"currentProjectProducts\"))\r\n    );\r\n  };\r\n\r\n  const updateProduct = (product) => {\r\n    let newProducts = JSON.parse(\r\n      localStorage.getItem(\"currentProjectProducts\")\r\n    );\r\n    newProducts = newProducts.filter((prod) => prod.id !== product.id);\r\n    newProducts.push(product);\r\n    localStorage.setItem(\"currentProjectProducts\", JSON.stringify(newProducts));\r\n    setCurrentProjectProducts(\r\n      JSON.parse(localStorage.getItem(\"currentProjectProducts\"))\r\n    );\r\n  };\r\n  const deleteProduct = (product) => {\r\n    if (window.confirm(\"¿Are you shure you want to delete this item?\")) {\r\n      let newProducts = JSON.parse(\r\n        localStorage.getItem(\"currentProjectProducts\")\r\n      );\r\n      newProducts = newProducts.filter((prod) => prod.id !== product.id);\r\n      localStorage.setItem(\r\n        \"currentProjectProducts\",\r\n        JSON.stringify(newProducts)\r\n      );\r\n      setCurrentProjectProducts(\r\n        JSON.parse(localStorage.getItem(\"currentProjectProducts\"))\r\n      );\r\n      window.alert(\"Item Deleted\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentProjectProducts(\r\n      JSON.parse(localStorage.getItem(\"currentProjectProducts\"))\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div className={\"FormList\"}>\r\n      <br />\r\n      <FormsModal>\r\n        <ProductFrom\r\n          updateProductList={addProduct}\r\n          defaultState={{\r\n            name: \"\",\r\n            cost: \"\",\r\n            price: \"\",\r\n            taxPercent: \"\",\r\n            saleProjecton: \"\",\r\n          }}\r\n        />\r\n      </FormsModal>\r\n      <br />\r\n      <h2>Products</h2>\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Total Price</th>\r\n            <th>B. Margin</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentProjectProducts.map((product) => (\r\n            <UpdateModal\r\n              item={product}\r\n              key={product.id}\r\n              deleteAction={deleteProduct}\r\n              row={<ProductRow product={product} />}\r\n            >\r\n              <ProductFrom\r\n                updateProductList={updateProduct}\r\n                defaultState={product}\r\n              />\r\n            </UpdateModal>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductRow({ product }) {\r\n  return (\r\n    <>\r\n      <td>{product.name}</td>\r\n      <td>$ {product.pricePlusTax}</td>\r\n      <td>$ {product.bruteMargin.toFixed(2)}</td>\r\n    </>\r\n  );\r\n}\r\n","export class Asset {\r\n  constructor(\r\n    name,\r\n    cost,\r\n    quantity,\r\n    id = Math.random(1000),\r\n    assetType = \"fixed\",\r\n    description = \"-\"\r\n  ) {\r\n    this.name = name;\r\n    this.quantity = parseFloat(quantity);\r\n    this.cost = cost;\r\n    this.totalCost = parseFloat(cost) * this.quantity;\r\n    this.assetType = assetType;\r\n    this.description = description;\r\n    this.id = id;\r\n  }\r\n}\r\nexport class Assets {\r\n  constructor(...assets) {\r\n    this.items = assets;\r\n    this.fixedAssets = this.items.filter(\r\n      (asset) => asset.assetType === \"fixed\"\r\n    );\r\n    this.liqAssets = this.items.filter((asset) => asset.assetType === \"liquid\");\r\n    this.fixedAssetsTotalAmount = this.fixedAssets.reduce(\r\n      (a, b) => a + b.totalCost,\r\n      0\r\n    );\r\n    this.liqdAssetsTotalAmount = this.liqAssets.reduce(\r\n      (a, b) => a + b.totalCost,\r\n      0\r\n    );\r\n    this.assetsTotalAmount = this.items.reduce((a, b) => a + b.totalCost, 0);\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Asset } from \"../../../clases/AssetClass\";\r\n\r\nexport default function AssetForm({ updateAssetList, Toggle, defaultState }) {\r\n  const [asset, setAsset] = useState(defaultState);\r\n\r\n  const hadleChange = (e) => {\r\n    const newValue = { [e.target.name]: e.target.value };\r\n    setAsset((prevState) => ({ ...prevState, ...newValue }));\r\n  };\r\n\r\n  const hadleUpdateAssetList = (e) => {\r\n    e.preventDefault();\r\n    let newAsset = new Asset(asset.name, asset.cost, asset.quantity, asset.id);\r\n    updateAssetList(newAsset);\r\n    //update de default values of the form\r\n    if (asset.id) {\r\n      defaultState = newAsset;\r\n    }\r\n    setAsset(defaultState);\r\n    Toggle();\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={hadleUpdateAssetList}>\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"name\">Asset</label>\r\n          <input\r\n            value={asset.name}\r\n            onChange={hadleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Asset name\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"quantity\">Quantity</label>\r\n          <input\r\n            value={asset.quantity}\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            placeholder=\"Quantity to buy\"\r\n            name=\"quantity\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"cost\">Unit Investment</label>\r\n          <input\r\n            value={asset.cost}\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            name=\"cost\"\r\n            placeholder=\"Asset cost\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <button>DONE</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport FormsModal from \"./FormsModal\";\r\nimport AssetForm from \"./Forms/AssetForm\";\r\nimport UpdateModal from \"./UpdateModal\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\n\r\nexport default function AssetsLis() {\r\n  const { currentProjectAssets, setCurrentProjectAssets } = useContext(\r\n    CurrentProjectContext\r\n  );\r\n\r\n  const addAsset = (asset) => {\r\n    let newAssets = JSON.parse(localStorage.getItem(\"currentProjectAssets\"));\r\n    newAssets.push(asset);\r\n    localStorage.setItem(\"currentProjectAssets\", JSON.stringify(newAssets));\r\n    setCurrentProjectAssets(\r\n      JSON.parse(localStorage.getItem(\"currentProjectAssets\"))\r\n    );\r\n  };\r\n  const UpdateAsset = (asset) => {\r\n    let newAssets = JSON.parse(localStorage.getItem(\"currentProjectAssets\"));\r\n    newAssets = newAssets.filter((ast) => ast.id !== asset.id);\r\n    newAssets.push(asset);\r\n    localStorage.setItem(\"currentProjectAssets\", JSON.stringify(newAssets));\r\n    setCurrentProjectAssets(\r\n      JSON.parse(localStorage.getItem(\"currentProjectAssets\"))\r\n    );\r\n  };\r\n\r\n  const deleteAsset = (asset) => {\r\n    if (window.confirm(\"¿Are you shure you want to delete this item?\")) {\r\n      let newAssets = JSON.parse(localStorage.getItem(\"currentProjectAssets\"));\r\n      newAssets = newAssets.filter((ast) => ast.id !== asset.id);\r\n      localStorage.setItem(\"currentProjectAssets\", JSON.stringify(newAssets));\r\n      setCurrentProjectAssets(\r\n        JSON.parse(localStorage.getItem(\"currentProjectAssets\"))\r\n      );\r\n      window.alert(\"Item Deleted\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentProjectAssets(\r\n      JSON.parse(localStorage.getItem(\"currentProjectAssets\"))\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"FormList\"}>\r\n      <br />\r\n\r\n      <FormsModal>\r\n        <AssetForm\r\n          updateAssetList={addAsset}\r\n          defaultState={{ name: \"\", cost: \"\", quantity: \"\" }}\r\n        />\r\n      </FormsModal>\r\n\r\n      <br />\r\n      <h2>Assets</h2>\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Asset</th>\r\n            <th>Quantity</th>\r\n            <th>Investment</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentProjectAssets.map((asset) => (\r\n            <UpdateModal\r\n              item={asset}\r\n              key={asset.id}\r\n              deleteAction={deleteAsset}\r\n              row={<AssetRow asset={asset} />}\r\n            >\r\n              <AssetForm updateAssetList={UpdateAsset} defaultState={asset} />\r\n            </UpdateModal>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nfunction AssetRow({ asset }) {\r\n  return (\r\n    <>\r\n      <td>{asset.name}</td>\r\n      <td>{asset.quantity} U</td>\r\n      <td>${asset.totalCost.toFixed(2)}</td>\r\n    </>\r\n  );\r\n}\r\n","export class Expense {\r\n  constructor(name, amount, type = \"service\", id = Math.random(1000)) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.amount = parseFloat(amount);\r\n    this.id = id;\r\n  }\r\n}\r\n\r\nexport class Expenses {\r\n  constructor(...expenses) {\r\n    this.items = expenses;\r\n    this.monthlyExpense = this.items.reduce((a, b) => a + b.amount, 0);\r\n    this.yearlyExpense = this.monthlyExpense * 12;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Expense } from \"../../../clases/ExpenseClass\";\r\n\r\nexport default function ExpenseForm({\r\n  updateExpenseList,\r\n  Toggle,\r\n  defaultState,\r\n}) {\r\n  const [expense, setExpense] = useState(defaultState);\r\n  const hadleChange = (e) => {\r\n    const newValue = { [e.target.name]: e.target.value };\r\n    setExpense((prevState) => ({ ...prevState, ...newValue }));\r\n  };\r\n  const hadleUpdateExpenseList = (e) => {\r\n    e.preventDefault();\r\n    let newExpense = new Expense(\r\n      expense.name,\r\n      expense.amount,\r\n      expense.type,\r\n      expense.id\r\n    );\r\n    updateExpenseList(newExpense);\r\n    //update de default values of the form in case is an update\r\n    if (expense.id) {\r\n      defaultState = newExpense;\r\n    }\r\n    setExpense(defaultState);\r\n    Toggle();\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={hadleUpdateExpenseList}>\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"name\">Expense</label>\r\n          <input\r\n            value={expense.name}\r\n            onChange={hadleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Expense name\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            value={expense.amount}\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            placeholder=\"Monthly amount\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"type\">Expense type</label>\r\n          <select\r\n            name=\"type\"\r\n            onChange={hadleChange}\r\n            value={expense.type}\r\n            required\r\n          >\r\n            <option value=\"undef\">select</option>\r\n            <option value=\"service\">service</option>\r\n            <option value=\"operations\">Operations</option>\r\n            <option value=\"marketing\">Marketing/Advertizing</option>\r\n            <option value=\"maintenance\">Maintenance</option>\r\n            <option value=\"materials\">Materials</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <button>DONE</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport FormsModal from \"./FormsModal\";\r\nimport UpdateModal from \"./UpdateModal\";\r\nimport ExpenseForm from \"./Forms/ExpenseForm\";\r\n\r\nexport default function ExpenseList() {\r\n  const { currentProjectExpenses, setCurrentProjectExpenses } = useContext(\r\n    CurrentProjectContext\r\n  );\r\n\r\n  const addExpense = (expense) => {\r\n    let newExpenses = JSON.parse(\r\n      localStorage.getItem(\"currentProjectExpenses\")\r\n    );\r\n    newExpenses.push(expense);\r\n    localStorage.setItem(\"currentProjectExpenses\", JSON.stringify(newExpenses));\r\n    setCurrentProjectExpenses(\r\n      JSON.parse(localStorage.getItem(\"currentProjectExpenses\"))\r\n    );\r\n  };\r\n\r\n  const UpdateExpense = (expense) => {\r\n    let newExpenses = JSON.parse(\r\n      localStorage.getItem(\"currentProjectExpenses\")\r\n    );\r\n    newExpenses = newExpenses.filter((exp) => exp.id !== expense.id);\r\n    newExpenses.push(expense);\r\n    localStorage.setItem(\"currentProjectExpenses\", JSON.stringify(newExpenses));\r\n    setCurrentProjectExpenses(\r\n      JSON.parse(localStorage.getItem(\"currentProjectExpenses\"))\r\n    );\r\n  };\r\n\r\n  const deleteExpense = (expense) => {\r\n    if (window.confirm(\"¿Are you shure you want to delete this item?\")) {\r\n      let newExpenses = JSON.parse(\r\n        localStorage.getItem(\"currentProjectExpenses\")\r\n      );\r\n      newExpenses = newExpenses.filter((exp) => exp.id !== expense.id);\r\n      localStorage.setItem(\r\n        \"currentProjectExpenses\",\r\n        JSON.stringify(newExpenses)\r\n      );\r\n      setCurrentProjectExpenses(\r\n        JSON.parse(localStorage.getItem(\"currentProjectExpenses\"))\r\n      );\r\n      window.alert(\"Item Deleted\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentProjectExpenses(\r\n      JSON.parse(localStorage.getItem(\"currentProjectExpenses\"))\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"FormList\"}>\r\n      <br />\r\n\r\n      <FormsModal>\r\n        <ExpenseForm\r\n          updateExpenseList={addExpense}\r\n          defaultState={{\r\n            name: \"\",\r\n            amount: \"\",\r\n            type: \"undef\",\r\n          }}\r\n        />\r\n      </FormsModal>\r\n      <br />\r\n      <h2>Expenses</h2>\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Expense</th>\r\n            <th>Amount</th>\r\n            <th>Type</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentProjectExpenses.map((expense) => (\r\n            <UpdateModal\r\n              item={expense}\r\n              key={expense.id}\r\n              deleteAction={deleteExpense}\r\n              row={<ExpenseRow expense={expense} />}\r\n            >\r\n              <ExpenseForm\r\n                updateExpenseList={UpdateExpense}\r\n                defaultState={expense}\r\n              />\r\n            </UpdateModal>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ExpenseRow({ expense }) {\r\n  return (\r\n    <>\r\n      <td>{expense.name}</td>\r\n      <td>$ {expense.amount}</td>\r\n      <td>{expense.type}</td>\r\n    </>\r\n  );\r\n}\r\n","export class Employee {\r\n  constructor(\r\n    position,\r\n    monthlySalary,\r\n    id = Math.random(1000),\r\n    jobDescription = \"-\",\r\n    contractType = \"fijo\",\r\n    paymentFrecuency = \"monthly\",\r\n    department = \"-\"\r\n  ) {\r\n    this.position = position;\r\n    this.monthlySalary = parseFloat(monthlySalary);\r\n    this.JobDescription = jobDescription;\r\n    this.yearlySalary = monthlySalary * 12;\r\n    this.contractType = contractType;\r\n    this.paymentFrecuency = paymentFrecuency;\r\n    this.depeartment = department;\r\n    this.id = id;\r\n  }\r\n}\r\n\r\nexport class Payroll {\r\n  constructor(...employees) {\r\n    this.payroll = employees;\r\n    this.monthlyPayroll = this.payroll.reduce((a, b) => a + b.monthlySalary, 0);\r\n    this.yearlyPayroll = this.monthlyPayroll * 12;\r\n    //departments?\r\n    //positions?\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Employee } from \"../../../clases/EmployeeClass\";\r\n\r\nexport default function EmployeeForm({\r\n  updatePayrollList,\r\n  Toggle,\r\n  defaultState,\r\n}) {\r\n  const [employee, setEmployee] = useState(defaultState);\r\n\r\n  const hadleChange = (e) => {\r\n    const newValue = { [e.target.name]: e.target.value };\r\n    setEmployee((prevState) => ({ ...prevState, ...newValue }));\r\n  };\r\n\r\n  const hadleUpdatePayrollList = (e) => {\r\n    e.preventDefault();\r\n    let newEmployee = new Employee(\r\n      employee.position,\r\n      employee.monthlySalary,\r\n      employee.id\r\n    );\r\n    updatePayrollList(newEmployee);\r\n    //update de default values of the form\r\n    if (employee.id) {\r\n      defaultState = newEmployee;\r\n    }\r\n    setEmployee(defaultState);\r\n    Toggle();\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={hadleUpdatePayrollList}>\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"position\">Position</label>\r\n          <input\r\n            value={employee.position}\r\n            onChange={hadleChange}\r\n            type=\"text\"\r\n            name=\"position\"\r\n            placeholder=\"Name of the position\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <label htmlFor=\"monthlySalary\">Sallary</label>\r\n          <input\r\n            value={employee.monthlySalary}\r\n            onChange={hadleChange}\r\n            type=\"number\"\r\n            name=\"monthlySalary\"\r\n            placeholder=\"Monthly Sallary\"\r\n            required\r\n          ></input>\r\n        </div>\r\n        <br />\r\n        <div className=\"formImput\">\r\n          <button>DONE</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport FormsModal from \"./FormsModal\";\r\nimport UpdateModal from \"./UpdateModal\";\r\nimport EmployeeForm from \"./Forms/EmployeeForm\";\r\n\r\nexport default function PayrollList() {\r\n  const { currentProjectPayroll, setCurrentProjectPayroll } = useContext(\r\n    CurrentProjectContext\r\n  );\r\n  const addEmployee = (employee) => {\r\n    let newEmployees = JSON.parse(\r\n      localStorage.getItem(\"currentProjectPayroll\")\r\n    );\r\n    newEmployees.push(employee);\r\n    localStorage.setItem(\"currentProjectPayroll\", JSON.stringify(newEmployees));\r\n    setCurrentProjectPayroll(\r\n      JSON.parse(localStorage.getItem(\"currentProjectPayroll\"))\r\n    );\r\n  };\r\n\r\n  const updateEmployee = (employee) => {\r\n    let newEmployees = JSON.parse(\r\n      localStorage.getItem(\"currentProjectPayroll\")\r\n    );\r\n    newEmployees = newEmployees.filter((emp) => emp.id !== employee.id);\r\n    newEmployees.push(employee);\r\n    localStorage.setItem(\"currentProjectPayroll\", JSON.stringify(newEmployees));\r\n    setCurrentProjectPayroll(\r\n      JSON.parse(localStorage.getItem(\"currentProjectPayroll\"))\r\n    );\r\n  };\r\n  const deleteEmployee = (employee) => {\r\n    if (window.confirm(\"¿Are you shure you want to delete this item?\")) {\r\n      let newEmployees = JSON.parse(\r\n        localStorage.getItem(\"currentProjectPayroll\")\r\n      );\r\n      newEmployees = newEmployees.filter((emp) => emp.id !== employee.id);\r\n      localStorage.setItem(\r\n        \"currentProjectPayroll\",\r\n        JSON.stringify(newEmployees)\r\n      );\r\n      setCurrentProjectPayroll(\r\n        JSON.parse(localStorage.getItem(\"currentProjectPayroll\"))\r\n      );\r\n      window.alert(\"Item Deleted\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentProjectPayroll(\r\n      JSON.parse(localStorage.getItem(\"currentProjectPayroll\"))\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div className={\"FormList\"}>\r\n      <br />\r\n      <FormsModal>\r\n        <EmployeeForm\r\n          updatePayrollList={addEmployee}\r\n          defaultState={{\r\n            position: \"\",\r\n            monthlySalary: \"\",\r\n          }}\r\n        />\r\n      </FormsModal>\r\n      <br />\r\n      <h2>Payroll</h2>\r\n      <br />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Position</th>\r\n            <th>Sallary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentProjectPayroll.map((employee) => (\r\n            <UpdateModal\r\n              item={employee}\r\n              key={employee.id}\r\n              deleteAction={deleteEmployee}\r\n              row={<EmployeeRow employee={employee} />}\r\n            >\r\n              <EmployeeForm\r\n                updatePayrollList={updateEmployee}\r\n                defaultState={employee}\r\n              />\r\n            </UpdateModal>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EmployeeRow({ employee }) {\r\n  return (\r\n    <>\r\n      <td>{employee.position}</td>\r\n      <td>$ {employee.monthlySalary.toFixed(2)}</td>\r\n    </>\r\n  );\r\n}\r\n","import { Products } from \"./ProductClass\";\r\nimport { Payroll } from \"./EmployeeClass\";\r\nimport { Expenses } from \"./ExpenseClass\";\r\nimport { Assets } from \"./AssetClass\";\r\n\r\nexport default class Project {\r\n  constructor(\r\n    projectName = \"AnonimusProject\",\r\n    industry,\r\n    products,\r\n    payroll,\r\n    expenses,\r\n    assets\r\n  ) {\r\n    this.projectName = projectName; //string\r\n    this.industry = industry; //string\r\n    this.contingencyPercent = 0.08; // percent of contigency t add to the budget\r\n    this.products = products; //object array\r\n    this.payroll = payroll; //object array\r\n    this.expenses = expenses; //object array\r\n    this.assets = assets; //object array\r\n\r\n    const EquilibriumByUnits = () =>\r\n      this.products.prodsMetrics.map((prod) => {\r\n        return {\r\n          product: prod.producto,\r\n          price: prod.salePrice,\r\n          Equ:\r\n            (this.monthlyFlow.fixedExpenses /\r\n              this.products.totalPondarateMargin) *\r\n            (prod.participacion / 100),\r\n          eqAmount:\r\n            (this.monthlyFlow.fixedExpenses /\r\n              this.products.totalPondarateMargin) *\r\n            (prod.participacion / 100) *\r\n            prod.salePrice,\r\n          participation: prod.participacion,\r\n          bMPercent: prod.bruteMarginPerc,\r\n          bMargen: prod.bruteMargin,\r\n          cost: prod.cost,\r\n        };\r\n      }); //gets the list of equillibrium by units\r\n\r\n    const Budget = (num) => {\r\n      return {\r\n        budProductionCapital: this.products.totalSalesCost,\r\n\r\n        budFixedExpenses: this.expenses.monthlyExpense * num,\r\n\r\n        budPayroll: this.payroll.monthlyPayroll * num,\r\n\r\n        budAssets: this.assets.assetsTotalAmount,\r\n\r\n        budContingency:\r\n          (this.products.totalSalesCost +\r\n            this.expenses.monthlyExpense * num +\r\n            this.payroll.monthlyPayroll * num +\r\n            this.assets.assetsTotalAmount) *\r\n          this.contingencyPercent,\r\n\r\n        totalBudget:\r\n          this.products.totalSalesCost +\r\n          this.expenses.monthlyExpense * num +\r\n          this.payroll.monthlyPayroll * num +\r\n          this.assets.assetsTotalAmount +\r\n          (this.products.totalSalesCost * num +\r\n            this.expenses.monthlyExpense * num +\r\n            this.payroll.monthlyPayroll * num +\r\n            this.assets.assetsTotalAmount * num) *\r\n            this.contingencyPercent,\r\n      };\r\n    };\r\n\r\n    this.monthlyFlow = {\r\n      sales: this.products.totalSales,\r\n      fixedExpenses: this.payroll.monthlyPayroll + this.expenses.monthlyExpense,\r\n      salesCost: this.products.totalSalesCost,\r\n      totalTax: this.products.totalTax,\r\n      netIncome:\r\n        this.products.totalSales -\r\n        (this.payroll.monthlyPayroll + this.expenses.monthlyExpense) -\r\n        this.products.totalSalesCost -\r\n        this.products.totalTax,\r\n    };\r\n\r\n    this.yearlyFlow = {\r\n      sales: this.products.totalSales * 12,\r\n      fixedExpenses:\r\n        (this.payroll.monthlyPayroll + this.expenses.monthlyExpense) * 12,\r\n      salesCost: this.products.totalSalesCost * 12,\r\n      totalTax: this.products.totalTax * 12,\r\n      netIncome:\r\n        (this.products.totalSales -\r\n          (this.payroll.monthlyPayroll + this.expenses.monthlyExpense) -\r\n          this.products.totalSalesCost -\r\n          this.products.totalTax) *\r\n        12,\r\n    };\r\n\r\n    this.equilibrium = {\r\n      unitEquilibrium: EquilibriumByUnits(), //equilibrium metric for every product\r\n      EquilibriumInUnits: EquilibriumByUnits().reduce((a, b) => a + b.Equ, 0), // minimo de productos a vender al mes\r\n      eqAmount: EquilibriumByUnits().reduce((a, b) => a + b.eqAmount, 0), // minimo de dinero a vender al mes\r\n      yearlyEqAmount:\r\n        EquilibriumByUnits().reduce((a, b) => a + b.eqAmount, 0) * 12, //minimo de dinero a vender al año\r\n    };\r\n\r\n    //Posible Budgets(minimum, Mid, Maximum,)\r\n    this.threeMonthBudget = Budget(3);\r\n    this.sixMonthBudget = Budget(6);\r\n    this.oneYearBudget = Budget(12);\r\n\r\n    //Metricas de inversion -  ROI\r\n\r\n    this.roi = (() => {\r\n      //CALCULATES num of years in which you should spect ROI\r\n      let spectedReturnTimeY = 0;\r\n      let moneyFlow = this.yearlyFlow.netIncome;\r\n      let investment = Budget(3);\r\n      let negativeInvestment = investment.totalBudget * -1;\r\n      let lastRemainer = 0;\r\n      let lastFlow = 0;\r\n      if (moneyFlow <= 0) {\r\n        return {\r\n          roiTime: \"This project is not rentable\",\r\n          minInitialInvestment: \"Do not invest\",\r\n        };\r\n      } else {\r\n        while (negativeInvestment < 0) {\r\n          lastRemainer = negativeInvestment;\r\n          lastFlow = moneyFlow;\r\n          negativeInvestment += moneyFlow;\r\n          if (negativeInvestment < 0) {\r\n            moneyFlow = moneyFlow * 1.05;\r\n            spectedReturnTimeY++;\r\n          }\r\n        }\r\n        let lastMonths = Math.floor(((lastRemainer * -1) / lastFlow) * 12);\r\n        return {\r\n          roiTime: `${spectedReturnTimeY} years and ${lastMonths} months`,\r\n          minInitialInvestment: investment.totalBudget,\r\n        };\r\n      }\r\n    })();\r\n\r\n    //TIR VPN?\r\n  }\r\n\r\n  set projName(name) {\r\n    this.projectName = name;\r\n  }\r\n\r\n  set indust(ind) {\r\n    this.industry = ind;\r\n  }\r\n\r\n  set cPercent(perc) {\r\n    this.contingencyPercent = perc;\r\n  }\r\n\r\n  static createProject(name, ind, prod, emp, gast, act) {\r\n    let prods = new Products(...prod);\r\n    let emps = new Payroll(...emp);\r\n    let gasts = new Expenses(...gast);\r\n    let acts = new Assets(...act);\r\n    let newProj = new Project(name, ind, prods, emps, gasts, acts);\r\n    return newProj;\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport Project from \"../../clases/ProjectClass\";\r\nimport Storage from \"../../clases/Storage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function ActionButtons() {\r\n  const {\r\n    currentProjectName,\r\n    currentProjectIndustry,\r\n    currentProjectProducts,\r\n    currentProjectAssets,\r\n    currentProjectExpenses,\r\n    currentProjectPayroll,\r\n    updateState,\r\n  } = useContext(CurrentProjectContext);\r\n\r\n  const hadleSave = () => {\r\n    const SavedProject = Project.createProject(\r\n      currentProjectName,\r\n      currentProjectIndustry,\r\n      currentProjectProducts,\r\n      currentProjectPayroll,\r\n      currentProjectExpenses,\r\n      currentProjectAssets\r\n    );\r\n\r\n    Storage.saveProject(SavedProject);\r\n  };\r\n\r\n  const hadleClear = () => {\r\n    if (\r\n      window.confirm(\r\n        \"¿Are you Sure you want to delete all data from this project?\"\r\n      )\r\n    ) {\r\n      Storage.clearProjectForms();\r\n      updateState();\r\n    }\r\n  };\r\n  //// handlePreviewProjec\r\n\r\n  const history = useHistory();\r\n\r\n  function hasLengthZero(array) {\r\n    return array.length === 0;\r\n  }\r\n\r\n  const handlePreviewProjec = () => {\r\n    if (\r\n      [\r\n        currentProjectProducts,\r\n        currentProjectPayroll,\r\n        currentProjectExpenses,\r\n        currentProjectAssets,\r\n      ].some(hasLengthZero)\r\n    ) {\r\n      window.alert(\"Please, copmplete at least one item of each cathegory\");\r\n    } else {\r\n      hadleSave();\r\n      history.push(`/project`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"actionButtons\">\r\n      <button style={{ background: \"green\" }} onClick={handlePreviewProjec}>\r\n        Preview Project\r\n      </button>\r\n      <button onClick={hadleSave}>Save Project</button>\r\n      <button style={{ background: \"red\" }} onClick={hadleClear}>\r\n        Clear All\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ProductsList from \"./ProductsList\";\r\nimport AssetsLis from \"./AssetsLis\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport PayrollList from \"./PayrollList\";\r\nimport ActionButtons from \"./ActionButtons\";\r\nexport default function ListsContainer() {\r\n  return (\r\n    <div className={\"listContainer\"}>\r\n      <ProductsList />\r\n      <AssetsLis />\r\n      <ExpenseList />\r\n      <PayrollList />\r\n      <ActionButtons />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport PopUp from \"../components/planerPageComponents/PopUp\";\r\nimport ListsContainer from \"../components/planerPageComponents/ListsContainer\";\r\nimport { CurrentProjectContext } from \"../context/CurrentProjectContext\";\r\n\r\nexport default function Planer() {\r\n  const { currentProjectName } = useContext(CurrentProjectContext);\r\n  const [projectNameIsDefined, setProjectNameIsDefined] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (currentProjectName === \"New Project\") {\r\n      setProjectNameIsDefined(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"sectionName\">\r\n        NOW PLANING: {currentProjectName.toUpperCase()}\r\n      </h2>\r\n\r\n      {!projectNameIsDefined && (\r\n        <PopUp setProjectNameIsDefined={setProjectNameIsDefined} />\r\n      )}\r\n      {projectNameIsDefined && <ListsContainer />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../../context/CurrentProjectContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Storage from \"../../clases/Storage\";\r\n\r\nexport default function ActionButtons() {\r\n  const { currentProjectName } = useContext(CurrentProjectContext);\r\n\r\n  const handleDelete = (e) => {\r\n    if (window.confirm(\"¿Are you sure you want to delete this project?\")) {\r\n      Storage.removeProject(currentProjectName);\r\n      window.alert(`The project ${currentProjectName} was deleted`);\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"actionbuttons2\">\r\n      <Link to=\"/planer\">\r\n        <i title=\"Edit Project\" className=\"fa fa-table \"></i>\r\n      </Link>\r\n      <Link to=\"/project\">\r\n        <i title=\"Back to Project Preview\" className=\"fa fa-bar-chart-o\"></i>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <i\r\n          onClick={handleDelete}\r\n          title=\"Delete Project\"\r\n          className=\"fa fa-trash-o\"\r\n        ></i>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default function DonutChart({ budget }) {\r\n  const state = {\r\n    options: {\r\n      labels: [\r\n        \"Production Capital\",\r\n        \"Fixed Expenses\",\r\n        \"Payroll\",\r\n        \"Assets\",\r\n        \"Contingency\",\r\n      ],\r\n      legend: {\r\n        position: \"bottom\",\r\n      },\r\n    },\r\n    series: [\r\n      budget.budProductionCapital,\r\n      budget.budFixedExpenses,\r\n      budget.budPayroll,\r\n      budget.budAssets,\r\n      budget.budContingency,\r\n    ],\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"1rem\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"donut\"\r\n        width=\"420\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DonutChart from \"./DonutChart\";\r\n\r\nexport default function BudgetCard({ header, budget }) {\r\n  return (\r\n    <div className=\"buggetCard\">\r\n      <h3>{header}</h3>\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Concept</th>\r\n              <th>Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Production Capital</td>\r\n              <td>${budget.budProductionCapital.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Fixed Expenses</td>\r\n              <td>${budget.budFixedExpenses.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Payroll</td>\r\n              <td>${budget.budPayroll.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Assets</td>\r\n              <td>${budget.budAssets.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Contingency</td>\r\n              <td>${budget.budContingency.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Budget</td>\r\n              <td>${budget.totalBudget.toFixed(2)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>{\" \"}\r\n      <DonutChart budget={budget} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentProjectContext } from \"../context/CurrentProjectContext\";\r\nimport ActionButtons from \"../components/BudgetPageComponents/ActionButtons\";\r\nimport BudgetCard from \"../components/BudgetPageComponents/BudgetCard\";\r\n\r\nexport default function BudgetPage() {\r\n  const { currentProjectName, currentProjecBody } = useContext(\r\n    CurrentProjectContext\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"page\">\r\n        <h2 className=\"sectionName\">\r\n          BUDGET FOR {currentProjectName.toUpperCase()}\r\n          <ActionButtons />\r\n        </h2>\r\n        {currentProjecBody.threeMonthBudget && (\r\n          <div className=\"budgetContainer\">\r\n            <BudgetCard\r\n              header=\"3 Months\"\r\n              budget={currentProjecBody.threeMonthBudget}\r\n            />\r\n            <BudgetCard\r\n              header=\"6 Months\"\r\n              budget={currentProjecBody.sixMonthBudget}\r\n            />\r\n            <BudgetCard\r\n              header=\"12 Months\"\r\n              budget={currentProjecBody.oneYearBudget}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"sectionName\">ABOUT THE CODE</h2>\r\n      <div className=\"information\">\r\n        <p>\r\n          This is a full stack app Using react for the frontend and express for\r\n          the backend. Its main functionality is to calculate the viability\r\n          indicators of business ideas.\r\n        </p>\r\n        <p>\r\n          The front end is built with some clases that format the data imputed\r\n          by the user in the way the API expexts to receive it. The backend\r\n          contains a rest API With a single endpoint that calculates all of the\r\n          indicators and returns them in JSON format. For that, it transforms\r\n          the data posted into an object that calculates everyting{\" \"}\r\n        </p>\r\n        <p>\r\n          This App uses the local storage of the browser to save the settings\r\n          and projects of the user\r\n        </p>\r\n        <br />\r\n        <p>Yirbett Joseph 2020</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Settings() {\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"sectionName\">SETTINGS</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Instructions() {\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"sectionName\">HOW TO USE</h2>\r\n\r\n      <div className=\"snipets\">\r\n        <div className=\"snipet\">\r\n          <img\r\n            src={require(\"../images/Dashboard.png\")}\r\n            alt=\"Select project name PopUp\"\r\n          />\r\n          <p>\r\n            1- This is the part of the app where you can see your\r\n            projectslisted. Naturaly at first this section is empty.\r\n          </p>\r\n          <p>\r\n            2- This is your nav. It gives you direct acces to the dasdboard from\r\n            any part of the app. You can also go to the new projects page to\r\n            build projects an back and forth.\r\n          </p>\r\n          <p> 3- The setting part is under developement</p>\r\n        </div>\r\n\r\n        <div className=\"snipet\">\r\n          <img\r\n            src={require(\"../images/SelectProjectName.png\")}\r\n            alt=\"Select project name PopUp\"\r\n          />\r\n          <p>\r\n            Before starting with your project, give it a name. Please try to not\r\n            repeat names so that the app doesnt get confused and think you are\r\n            trying to edit an old project. your industry{\" \"}\r\n          </p>\r\n          <img\r\n            src={require(\"../images/PlanerPage.png\")}\r\n            alt=\"Select project name PopUp\"\r\n          />\r\n          <p>\r\n            To start creating your project simply input the list of parameters\r\n            by adding (1 and 2) your products, assets, etc. and press some of\r\n            the action buttons to save and then prevew (5) the project\r\n            indicators\r\n          </p>\r\n          <p>\r\n            If you what to modify a parameter, simply doubleckick (3) on the\r\n            item and the update form (4) will display\r\n          </p>\r\n          <p> hit preview to see the results</p>\r\n        </div>\r\n        <div className=\"snipet\">\r\n          <img\r\n            src={require(\"../images/Preview.PNG\")}\r\n            alt=\"Select project name PopUp\"\r\n          />\r\n          <p>\r\n            This are the results of a projec being calculated for the app. What\r\n            you see is the projection of how the business will behave if the\r\n            conditions stablished at the beggining are stable.{\" \"}\r\n          </p>\r\n          <p>\r\n            The top rigt corner has the action buttons that allow you to go to\r\n            the budget pannel and to go back to edit your project parameters\r\n          </p>\r\n\r\n          <img\r\n            src={require(\"../images/Budget.PNG\")}\r\n            alt=\"Select project name PopUp\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","//Modules\nimport React, { useRef } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { CurrentProjectContextProvider } from \"./context/CurrentProjectContext\";\nimport { AchivedProjectsContextProvider } from \"./context/AchivedProjectsContext\";\nimport \"./css/App.css\";\n\n//Pages and Components\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Project from \"./pages/Project\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Planer from \"./pages/Planer\";\nimport BudgetPage from \"./pages/BudgetPage\";\nimport About from \"./pages/About\";\nimport Settings from \"./pages/Settings\";\nimport Instructions from \"./pages/Instructions\";\n\nfunction App() {\n  const nodeRef = useRef(null);\n  return (\n    <div className=\"App\">\n      <CurrentProjectContextProvider>\n        <AchivedProjectsContextProvider>\n          <Header />\n          <Nav />\n\n          <Route\n            render={({ location }) => (\n              <TransitionGroup>\n                <CSSTransition\n                  key={location.key}\n                  classNames=\"fade\"\n                  timeout={1300}\n                  ref={nodeRef}\n                >\n                  <Switch>\n                    <Route path={\"/\"} exact component={Dashboard} />\n                    <Route path={\"/project\"} component={Project} />\n                    <Route path={\"/planer\"} component={Planer} />\n                    <Route path={\"/budget\"} component={BudgetPage} />\n                    <Route path={\"/settings\"} component={Settings} />\n                    <Route path={\"/instructions\"} component={Instructions} />\n                    <Route path={\"/about\"} component={About} />\n                  </Switch>\n                </CSSTransition>\n              </TransitionGroup>\n            )}\n          />\n        </AchivedProjectsContextProvider>\n      </CurrentProjectContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}